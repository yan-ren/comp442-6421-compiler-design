
// ====== struct declarations ====== //
struct POLYNOMIAL {
	public func evaluate(x: float) -> float;
};

struct QUADRATIC inherits POLYNOMIAL {
	private let a: float;
	private let b: float;
	private let c: float;
	public  func build(A: float, B: float, C: float) -> QUADRATIC;
	public  func evaluate(x: float) -> float;
};

impl QUADRATIC { 
  func evaluate(x: float) -> float
  {
    let result: float;
    //Using Horner's method
    result = a;
    result = result * x + b;
    result = result * x + c;
    return (result);
  }
  func build(A: float, B: float, C: float) -> QUADRATIC 
  {
    let new_function: QUADRATIC ;
    new_function.a = A;
    new_function.b = B;
    new_function.c = C;
    return (new_function);
  }
}

/*
func debug() -> void
{
	a.b[c][2].d = 1;
	a.b.c = 2;
}
*/
	//let v : integer[2][3];
	//let v : integer[2][3];
/*
struct LINEAR {
	private let a: float;
	private let b: float[];
	public  func build(A: float, B: float) -> LINEAR;
	public  func evaluate(x: float) -> float;
};
*/
/*
struct LINEAR {
	private let a: float;
	private let b: float;
	public  func build(A: float, B: float) -> LINEAR;
	public  func evaluate(x: float) -> float;
};
*/
