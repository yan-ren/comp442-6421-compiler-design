<START>              ::= <prog>
<prog>               ::= {{<structOrImplOrfunc>}} 
<structOrImplOrFunc> ::= <structDecl> | <implDef> | <funcDef>   
<structDecl>         ::= 'struct' 'id' [['inherits' 'id' {{',' 'id'}}]] '{' {{<visibility> <memberDecl>}} '}' ';'
<implDef>            ::= 'impl' 'id' '{' {{<funcDef>}} '}'
<funcDef>            ::= <funcHead> <funcBody> 
<visibility>         ::= 'public' | 'private' 
<memberDecl>         ::= <funcDecl> | <varDecl>  
<funcDecl>           ::= <funcHead> ';' 
<funcHead>           ::= 'func' 'id' '(' <fParams> ')' '->' <returnType> 
<funcBody>           ::= '{' {{<varDeclOrStat>}} '}'
<varDeclOrStat>      ::= <varDecl> | <statement>
<varDecl>            ::= 'let' 'id' ':' <type> {{<arraySize>}} ';'
<statement>          ::= <assignStat> ';'
                      |  'if'     '(' <relExpr> ')' 'then' <statBlock> 'else' <statBlock> ';'
                      |  'while'  '(' <relExpr> ')' <statBlock> ';'
                      |  'read'   '(' <variable> ')' ';'
                      |  'write'  '(' <expr> ')' ';'
                      |  'return' '(' <expr> ')' ';'
                      |  <functionCall> ';'
<assignStat>         ::= <variable> <assignOp> <expr>
<statBlock>          ::= '{' {{<statement>}} '}' | <statement> | EPSILON  
<expr>               ::= <arithExpr> | <relExpr>
<relExpr>            ::= <arithExpr> <relOp> <arithExpr>
<arithExpr>          ::= <arithExpr> <addOp> <term> | <term> 
<sign>               ::= '+' | '-'
<term>               ::= <term> <multOp> <factor> | <factor>
<factor>             ::= <variable>
                      |  <functionCall>
                      |  'intLit' | 'floatLit'
                      |  '(' <arithExpr> ')'
                      |  'not' <factor>
                      |  <sign> <factor>
<variable>           ::= {{<idnest>}} 'id' {{<indice>}}
<functionCall>       ::= {{<idnest>}} 'id' '(' <aParams> ')'
<idnest>             ::= 'id' {{<indice>}} '.'
                      |  'id' '(' <aParams> ')' '.'
<indice>             ::= '[' <arithExpr> ']'
<arraySize>          ::= '[' 'intNum' ']' | '[' ']'
<type>               ::= 'integer' | 'float' | 'id'
<returnType>         ::= <type> |  'void'
<fParams>            ::= 'id' ':' <type> {{<arraySize>}} {{<fParamsTail>}} | EPSILON  
<aParams>            ::= <expr> {{<aParamsTail>}} | EPSILON 
<fParamsTail>        ::= ',' 'id' ':' <type> {{<arraySize>}}
<aParamsTail>        ::= ',' <expr>
<assignOp>           ::= '='
<relOp>              ::= 'eq' | 'neq' | 'lt' | 'gt' | 'leq' | 'geq' 
<addOp>              ::= '+' | '-' | 'or' 
<multOp>             ::= '*' | '/' | 'and'
