[inlinecmt, // Assignment 5 coverage:\n, 1]
[inlinecmt, //      -------------\n, 2]
[inlinecmt, //      | YES | NO  |\n, 3]
[inlinecmt, //      ------------- \n, 4]
[inlinecmt, // 1.1: |  X  |     |\n, 5]
[inlinecmt, // 1.2: |  X  |     |\n, 6]
[inlinecmt, // 1.3: |     |  X  |\n, 7]
[inlinecmt, // 1.4: |     |  X  |\n, 8]
[inlinecmt, // 2.1: |  X  |     |\n, 9]
[inlinecmt, // 2.2: |  X  |     |\n, 10]
[inlinecmt, // 2.3: |     |  X  |\n, 11]
[inlinecmt, // 2.4: |     |  X  |\n, 12]
[inlinecmt, // 3.1: |  X  |     |\n, 13]
[inlinecmt, // 3.2: |  X  |     |\n, 14]
[inlinecmt, // 3.3: |  X  |     |\n, 15]
[inlinecmt, // 3.4: |  X  |     |\n, 16]
[inlinecmt, // 4.1: |  X  |     |\n, 17]
[inlinecmt, // 4.2: |     |  X  |\n, 18]
[inlinecmt, // 4.3: |     |  X  |\n, 19]
[inlinecmt, // 4.4: |     |  X  |\n, 20]
[inlinecmt, // 5.1: |  X  |     |\n, 21]
[inlinecmt, // 5.2: |  X  |     |\n, 22]
[inlinecmt, // 5.3: |     |  X  |\n, 23]
[inlinecmt, //      -------------\n, 24]
[blockcmt, /* sort the array */, 26]
[func, func, 27]
[id, bubbleSort, 27]
[openpar, (, 27]
[id, arr, 27]
[colon, :, 27]
[integer, integer, 27]
[opensqbr, [, 27]
[closesqbr, ], 27]
[comma, ,, 27]
[id, size, 27]
[colon, :, 27]
[integer, integer, 27]
[closepar, ), 27]
[arrow, ->, 27]
[void, void, 27]
[inlinecmt, // 2.1, 2.2\n, 27]
[opencubr, {, 28]
[let, let, 29]
[id, n, 29]
[colon, :, 29]
[integer, integer, 29]
[semi, ;, 29]
[inlinecmt, // 1.1\n, 29]
[let, let, 30]
[id, i, 30]
[colon, :, 30]
[integer, integer, 30]
[semi, ;, 30]
[inlinecmt, // 1.1  \n, 30]
[let, let, 31]
[id, j, 31]
[colon, :, 31]
[integer, integer, 31]
[semi, ;, 31]
[inlinecmt, // 1.1  \n, 31]
[let, let, 32]
[id, temp, 32]
[colon, :, 32]
[integer, integer, 32]
[semi, ;, 32]
[inlinecmt, // 1.1                                                 \n, 32]
[id, n, 33]
[assign, =, 33]
[id, size, 33]
[semi, ;, 33]
[inlinecmt, // 3.1\n, 33]
[id, i, 34]
[assign, =, 34]
[intnum, 0, 34]
[semi, ;, 34]
[inlinecmt, // 3.1  \n, 34]
[id, j, 35]
[assign, =, 35]
[intnum, 0, 35]
[semi, ;, 35]
[inlinecmt, // 3.1\n, 35]
[id, temp, 36]
[assign, =, 36]
[intnum, 0, 36]
[semi, ;, 36]
[inlinecmt, // 3.1\n, 36]
[while, while, 37]
[openpar, (, 37]
[id, i, 37]
[lt, <, 37]
[id, n, 37]
[minus, -, 37]
[intnum, 1, 37]
[closepar, ), 37]
[opencubr, {, 37]
[inlinecmt, // 3.3, 5.1\n, 37]
[while, while, 38]
[openpar, (, 38]
[id, j, 38]
[lt, <, 38]
[id, n, 38]
[minus, -, 38]
[id, i, 38]
[minus, -, 38]
[intnum, 1, 38]
[closepar, ), 38]
[opencubr, {, 38]
[inlinecmt, // 3.3\n, 38]
[if, if, 39]
[openpar, (, 39]
[id, arr, 39]
[opensqbr, [, 39]
[id, j, 39]
[closesqbr, ], 39]
[gt, >, 39]
[id, arr, 39]
[opensqbr, [, 39]
[id, j, 39]
[plus, +, 39]
[intnum, 1, 39]
[closesqbr, ], 39]
[closepar, ), 39]
[inlinecmt, // 3.2, 4.1, 5.1, 5.2\n, 39]
[then, then, 40]
[opencubr, {, 40]
[inlinecmt, // swap temp and arr[i]\n, 41]
[id, temp, 42]
[assign, =, 42]
[id, arr, 42]
[opensqbr, [, 42]
[id, j, 42]
[closesqbr, ], 42]
[semi, ;, 42]
[inlinecmt, // 3.1, 4.1, 5.2\n, 42]
[id, arr, 43]
[opensqbr, [, 43]
[id, j, 43]
[closesqbr, ], 43]
[assign, =, 43]
[id, arr, 43]
[opensqbr, [, 43]
[id, j, 43]
[plus, +, 43]
[intnum, 1, 43]
[closesqbr, ], 43]
[semi, ;, 43]
[inlinecmt, // 3.1, 4.1, 5.2\n, 43]
[id, arr, 44]
[opensqbr, [, 44]
[id, j, 44]
[plus, +, 44]
[intnum, 1, 44]
[closesqbr, ], 44]
[assign, =, 44]
[id, temp, 44]
[semi, ;, 44]
[inlinecmt, // 3.1, 4.1, 5.2\n, 44]
[closecubr, }, 45]
[else, else, 45]
[semi, ;, 45]
[id, j, 46]
[assign, =, 46]
[id, j, 46]
[plus, +, 46]
[intnum, 1, 46]
[semi, ;, 46]
[inlinecmt, // 3.1, 5.1\n, 46]
[closecubr, }, 47]
[semi, ;, 47]
[id, i, 48]
[assign, =, 48]
[id, i, 48]
[plus, +, 48]
[intnum, 1, 48]
[semi, ;, 48]
[inlinecmt, // 3.1, 5.1\n, 48]
[closecubr, }, 49]
[semi, ;, 49]
[closecubr, }, 50]
[blockcmt, /* Print the array */, 52]
[func, func, 53]
[id, printArray, 53]
[openpar, (, 53]
[id, arr, 53]
[colon, :, 53]
[integer, integer, 53]
[opensqbr, [, 53]
[closesqbr, ], 53]
[comma, ,, 53]
[id, size, 53]
[colon, :, 53]
[integer, integer, 53]
[closepar, ), 53]
[arrow, ->, 53]
[void, void, 53]
[inlinecmt, // 2.1, 2.2\n, 53]
[opencubr, {, 54]
[let, let, 55]
[id, n, 55]
[colon, :, 55]
[integer, integer, 55]
[semi, ;, 55]
[inlinecmt, // 1.1\n, 55]
[let, let, 56]
[id, i, 56]
[colon, :, 56]
[integer, integer, 56]
[semi, ;, 56]
[inlinecmt, // 1.1\n, 56]
[id, n, 57]
[assign, =, 57]
[id, size, 57]
[semi, ;, 57]
[inlinecmt, // 3.1\n, 57]
[id, i, 58]
[assign, =, 58]
[intnum, 0, 58]
[semi, ;, 58]
[inlinecmt, // 3.1\n, 58]
[while, while, 59]
[openpar, (, 59]
[id, i, 59]
[lt, <, 59]
[id, n, 59]
[closepar, ), 59]
[opencubr, {, 59]
[inlinecmt, // 3.3, 5.1\n, 59]
[write, write, 60]
[openpar, (, 60]
[id, arr, 60]
[opensqbr, [, 60]
[id, i, 60]
[closesqbr, ], 60]
[closepar, ), 60]
[semi, ;, 60]
[inlinecmt, // 3.4, 4.1, 5.2\n, 60]
[id, i, 61]
[assign, =, 61]
[id, i, 61]
[plus, +, 61]
[intnum, 1, 61]
[semi, ;, 61]
[inlinecmt, // 3.1, 5.1\n, 61]
[closecubr, }, 62]
[semi, ;, 62]
[closecubr, }, 63]
[inlinecmt, // main funtion to test above\n, 65]
[func, func, 66]
[id, main, 66]
[openpar, (, 66]
[closepar, ), 66]
[arrow, ->, 66]
[void, void, 66]
[opencubr, {, 67]
[let, let, 68]
[id, arr, 68]
[colon, :, 68]
[integer, integer, 68]
[opensqbr, [, 68]
[intnum, 7, 68]
[closesqbr, ], 68]
[semi, ;, 68]
[inlinecmt, // 1.1\n, 68]
[id, arr, 69]
[opensqbr, [, 69]
[intnum, 0, 69]
[closesqbr, ], 69]
[assign, =, 69]
[intnum, 64, 69]
[semi, ;, 69]
[inlinecmt, // 3.1 \n, 69]
[id, arr, 70]
[opensqbr, [, 70]
[intnum, 1, 70]
[closesqbr, ], 70]
[assign, =, 70]
[intnum, 34, 70]
[semi, ;, 70]
[inlinecmt, // 3.1\n, 70]
[id, arr, 71]
[opensqbr, [, 71]
[intnum, 2, 71]
[closesqbr, ], 71]
[assign, =, 71]
[intnum, 25, 71]
[semi, ;, 71]
[inlinecmt, // 3.1\n, 71]
[id, arr, 72]
[opensqbr, [, 72]
[intnum, 3, 72]
[closesqbr, ], 72]
[assign, =, 72]
[intnum, 12, 72]
[semi, ;, 72]
[inlinecmt, // 3.1\n, 72]
[id, arr, 73]
[opensqbr, [, 73]
[intnum, 4, 73]
[closesqbr, ], 73]
[assign, =, 73]
[intnum, 22, 73]
[semi, ;, 73]
[inlinecmt, // 3.1\n, 73]
[id, arr, 74]
[opensqbr, [, 74]
[intnum, 5, 74]
[closesqbr, ], 74]
[assign, =, 74]
[intnum, 11, 74]
[semi, ;, 74]
[inlinecmt, // 3.1\n, 74]
[id, arr, 75]
[opensqbr, [, 75]
[intnum, 6, 75]
[closesqbr, ], 75]
[assign, =, 75]
[intnum, 90, 75]
[semi, ;, 75]
[inlinecmt, // 3.1\n, 75]
[id, printArray, 76]
[openpar, (, 76]
[id, arr, 76]
[comma, ,, 76]
[intnum, 7, 76]
[closepar, ), 76]
[semi, ;, 76]
[inlinecmt, // 2.1, 2.2\n, 76]
[id, bubbleSort, 77]
[openpar, (, 77]
[id, arr, 77]
[comma, ,, 77]
[intnum, 7, 77]
[closepar, ), 77]
[semi, ;, 77]
[inlinecmt, // 2.1, 2.2 \n, 77]
[id, printArray, 78]
[openpar, (, 78]
[id, arr, 78]
[comma, ,, 78]
[intnum, 7, 78]
[closepar, ), 78]
[semi, ;, 78]
[inlinecmt, // 2.1, 2.2\n, 78]
[closecubr, }, 79]
[$, $, 80]
