[inlinecmt, // Assignment 5 coverage:\n, 1]
[inlinecmt, //      -------------\n, 2]
[inlinecmt, //      | YES | NO  |\n, 3]
[inlinecmt, //      -------------\n, 4]
[inlinecmt, // 1.1: |  X  |     |\n, 5]
[inlinecmt, // 1.2: |  X  |     |\n, 6]
[inlinecmt, // 1.3: |     |  X  |\n, 7]
[inlinecmt, // 1.4: |     |  X  |\n, 8]
[inlinecmt, // 2.1: |  X  |     |\n, 9]
[inlinecmt, // 2.2: |  X  |     |\n, 10]
[inlinecmt, // 2.3: |     |  X  |\n, 11]
[inlinecmt, // 2.4: |     |  X  |\n, 12]
[inlinecmt, // 3.1: |  X  |     |\n, 13]
[inlinecmt, // 3.2: |  X  |     |\n, 14]
[inlinecmt, // 3.3: |  X  |     |\n, 15]
[inlinecmt, // 3.4: |  X  |     |\n, 16]
[inlinecmt, // 4.1: |  X  |     |\n, 17]
[inlinecmt, // 4.2: |     |  X  |\n, 18]
[inlinecmt, // 4.3: |     |  X  |\n, 19]
[inlinecmt, // 4.4: |     |  X  |\n, 20]
[inlinecmt, // 5.1: |  X  |     |\n, 21]
[inlinecmt, // 5.2: |  X  |     |\n, 22]
[inlinecmt, // 5.3: |     |  X  |\n, 23]
[inlinecmt, //      -------------\n, 24]
[blockcmt, /* sort the array */, 26]
[func, func, 27]
[id, bubbleSort, 27]
[openpar, (, 27]
[id, arr, 27]
[colon, :, 27]
[integer, integer, 27]
[opensqbr, [, 27]
[closesqbr, ], 27]
[comma, ,, 27]
[id, size, 27]
[colon, :, 27]
[integer, integer, 27]
[closepar, ), 27]
[arrow, ->, 27]
[void, void, 27]
[inlinecmt, // 2.1, 2.2\n, 27]
[opencubr, {, 28]
[let, let, 29]
[id, n, 29]
[colon, :, 29]
[integer, integer, 29]
[semi, ;, 29]
[inlinecmt, // 1.1\n, 29]
[let, let, 30]
[id, i, 30]
[colon, :, 30]
[integer, integer, 30]
[semi, ;, 30]
[inlinecmt, // 1.1\n, 30]
[let, let, 31]
[id, j, 31]
[colon, :, 31]
[integer, integer, 31]
[semi, ;, 31]
[inlinecmt, // 1.1\n, 31]
[let, let, 32]
[id, temp, 32]
[colon, :, 32]
[integer, integer, 32]
[semi, ;, 32]
[inlinecmt, // 1.1\n, 32]
[id, n, 33]
[assign, =, 33]
[id, size, 33]
[semi, ;, 33]
[inlinecmt, // 3.1\n, 33]
[id, i, 34]
[assign, =, 34]
[intnum, 0, 34]
[semi, ;, 34]
[inlinecmt, // 3.1\n, 34]
[id, temp, 35]
[assign, =, 35]
[intnum, 0, 35]
[semi, ;, 35]
[inlinecmt, // 3.1\n, 35]
[while, while, 37]
[openpar, (, 37]
[id, i, 37]
[lt, <, 37]
[id, n, 37]
[minus, -, 37]
[intnum, 1, 37]
[closepar, ), 37]
[opencubr, {, 37]
[inlinecmt, // 3.3, 5.1\n, 37]
[id, j, 38]
[assign, =, 38]
[intnum, 0, 38]
[semi, ;, 38]
[while, while, 39]
[openpar, (, 39]
[id, j, 39]
[lt, <, 39]
[id, n, 39]
[minus, -, 39]
[id, i, 39]
[plus, +, 39]
[intnum, 1, 39]
[closepar, ), 39]
[opencubr, {, 39]
[inlinecmt, // 3.3\n, 39]
[if, if, 40]
[openpar, (, 40]
[id, arr, 40]
[opensqbr, [, 40]
[id, j, 40]
[closesqbr, ], 40]
[gt, >, 40]
[id, arr, 40]
[opensqbr, [, 40]
[id, j, 40]
[plus, +, 40]
[intnum, 1, 40]
[closesqbr, ], 40]
[closepar, ), 40]
[inlinecmt, // 3.2, 4.1, 5.1, 5.2\n, 40]
[then, then, 41]
[opencubr, {, 41]
[inlinecmt, // swap temp and arr[i]\n, 42]
[id, temp, 43]
[assign, =, 43]
[id, arr, 43]
[opensqbr, [, 43]
[id, j, 43]
[closesqbr, ], 43]
[semi, ;, 43]
[inlinecmt, // 3.1, 4.1, 5.2\n, 43]
[id, arr, 44]
[opensqbr, [, 44]
[id, j, 44]
[closesqbr, ], 44]
[assign, =, 44]
[id, arr, 44]
[opensqbr, [, 44]
[id, j, 44]
[plus, +, 44]
[intnum, 1, 44]
[closesqbr, ], 44]
[semi, ;, 44]
[inlinecmt, // 3.1, 4.1, 5.2\n, 44]
[id, arr, 45]
[opensqbr, [, 45]
[id, j, 45]
[plus, +, 45]
[intnum, 1, 45]
[closesqbr, ], 45]
[assign, =, 45]
[id, temp, 45]
[semi, ;, 45]
[inlinecmt, // 3.1, 4.1, 5.2\n, 45]
[closecubr, }, 46]
[else, else, 46]
[semi, ;, 46]
[id, j, 47]
[assign, =, 47]
[id, j, 47]
[plus, +, 47]
[intnum, 1, 47]
[semi, ;, 47]
[inlinecmt, // 3.1, 5.1\n, 47]
[closecubr, }, 48]
[semi, ;, 48]
[id, i, 49]
[assign, =, 49]
[id, i, 49]
[plus, +, 49]
[intnum, 1, 49]
[semi, ;, 49]
[inlinecmt, // 3.1, 5.1\n, 49]
[closecubr, }, 50]
[semi, ;, 50]
[return, return, 51]
[openpar, (, 51]
[intnum, 0, 51]
[closepar, ), 51]
[semi, ;, 51]
[closecubr, }, 52]
[blockcmt, /* Print the array */, 54]
[func, func, 55]
[id, printArray, 55]
[openpar, (, 55]
[id, arr, 55]
[colon, :, 55]
[integer, integer, 55]
[opensqbr, [, 55]
[closesqbr, ], 55]
[comma, ,, 55]
[id, size, 55]
[colon, :, 55]
[integer, integer, 55]
[closepar, ), 55]
[arrow, ->, 55]
[void, void, 55]
[inlinecmt, // 2.1, 2.2\n, 55]
[opencubr, {, 56]
[let, let, 57]
[id, n, 57]
[colon, :, 57]
[integer, integer, 57]
[semi, ;, 57]
[inlinecmt, // 1.1\n, 57]
[let, let, 58]
[id, i, 58]
[colon, :, 58]
[integer, integer, 58]
[semi, ;, 58]
[inlinecmt, // 1.1\n, 58]
[id, n, 59]
[assign, =, 59]
[id, size, 59]
[semi, ;, 59]
[inlinecmt, // 3.1\n, 59]
[id, i, 60]
[assign, =, 60]
[intnum, 0, 60]
[semi, ;, 60]
[inlinecmt, // 3.1\n, 60]
[while, while, 62]
[openpar, (, 62]
[id, i, 62]
[lt, <, 62]
[id, n, 62]
[closepar, ), 62]
[opencubr, {, 62]
[inlinecmt, // 3.3, 5.1\n, 62]
[write, write, 63]
[openpar, (, 63]
[id, arr, 63]
[opensqbr, [, 63]
[id, i, 63]
[closesqbr, ], 63]
[closepar, ), 63]
[semi, ;, 63]
[inlinecmt, // 3.4, 4.1, 5.2\n, 63]
[id, i, 64]
[assign, =, 64]
[id, i, 64]
[plus, +, 64]
[intnum, 1, 64]
[semi, ;, 64]
[inlinecmt, // 3.1, 5.1\n, 64]
[closecubr, }, 65]
[semi, ;, 65]
[return, return, 66]
[openpar, (, 66]
[intnum, 0, 66]
[closepar, ), 66]
[semi, ;, 66]
[closecubr, }, 67]
[inlinecmt, // main funtion to test above\n, 69]
[func, func, 70]
[id, main, 70]
[openpar, (, 70]
[closepar, ), 70]
[arrow, ->, 70]
[void, void, 70]
[opencubr, {, 71]
[let, let, 72]
[id, arr, 72]
[colon, :, 72]
[integer, integer, 72]
[opensqbr, [, 72]
[intnum, 7, 72]
[closesqbr, ], 72]
[semi, ;, 72]
[inlinecmt, // 1.1\n, 72]
[id, arr, 73]
[opensqbr, [, 73]
[intnum, 0, 73]
[closesqbr, ], 73]
[assign, =, 73]
[intnum, 64, 73]
[semi, ;, 73]
[inlinecmt, // 3.1\n, 73]
[id, arr, 74]
[opensqbr, [, 74]
[intnum, 1, 74]
[closesqbr, ], 74]
[assign, =, 74]
[intnum, 34, 74]
[semi, ;, 74]
[inlinecmt, // 3.1\n, 74]
[id, arr, 75]
[opensqbr, [, 75]
[intnum, 2, 75]
[closesqbr, ], 75]
[assign, =, 75]
[intnum, 25, 75]
[semi, ;, 75]
[inlinecmt, // 3.1\n, 75]
[id, arr, 76]
[opensqbr, [, 76]
[intnum, 3, 76]
[closesqbr, ], 76]
[assign, =, 76]
[intnum, 12, 76]
[semi, ;, 76]
[inlinecmt, // 3.1\n, 76]
[id, arr, 77]
[opensqbr, [, 77]
[intnum, 4, 77]
[closesqbr, ], 77]
[assign, =, 77]
[intnum, 22, 77]
[semi, ;, 77]
[inlinecmt, // 3.1\n, 77]
[id, arr, 78]
[opensqbr, [, 78]
[intnum, 5, 78]
[closesqbr, ], 78]
[assign, =, 78]
[intnum, 11, 78]
[semi, ;, 78]
[inlinecmt, // 3.1\n, 78]
[id, arr, 79]
[opensqbr, [, 79]
[intnum, 6, 79]
[closesqbr, ], 79]
[assign, =, 79]
[intnum, 90, 79]
[semi, ;, 79]
[inlinecmt, // 3.1\n, 79]
[id, printArray, 80]
[openpar, (, 80]
[id, arr, 80]
[comma, ,, 80]
[intnum, 7, 80]
[closepar, ), 80]
[semi, ;, 80]
[inlinecmt, // 2.1, 2.2\n, 80]
[id, bubbleSort, 81]
[openpar, (, 81]
[id, arr, 81]
[comma, ,, 81]
[intnum, 7, 81]
[closepar, ), 81]
[semi, ;, 81]
[inlinecmt, // 2.1, 2.2\n, 81]
[id, printArray, 82]
[openpar, (, 82]
[id, arr, 82]
[comma, ,, 82]
[intnum, 7, 82]
[closepar, ), 82]
[semi, ;, 82]
[inlinecmt, // 2.1, 2.2\n, 82]
[closecubr, }, 83]
[$, $, 84]
