[struct, struct, 1]
[id, POLYNOMIAL, 1]
[opencubr, {, 1]
[public, public, 2]
[func, func, 2]
[id, evaluate, 2]
[openpar, (, 2]
[id, x, 2]
[colon, :, 2]
[float, float, 2]
[closepar, ), 2]
[arrow, ->, 2]
[float, float, 2]
[semi, ;, 2]
[public, public, 3]
[func, func, 3]
[id, evaluate2, 3]
[openpar, (, 3]
[id, x, 3]
[colon, :, 3]
[float, float, 3]
[closepar, ), 3]
[arrow, ->, 3]
[float, float, 3]
[semi, ;, 3]
[inlinecmt, // 6.2\n, 3]
[closecubr, }, 4]
[semi, ;, 4]
[struct, struct, 5]
[id, POLYNOMIAL, 5]
[opencubr, {, 5]
[inlinecmt, // 8.1\n, 5]
[public, public, 6]
[func, func, 6]
[id, evaluate, 6]
[openpar, (, 6]
[id, x, 6]
[colon, :, 6]
[float, float, 6]
[closepar, ), 6]
[arrow, ->, 6]
[float, float, 6]
[semi, ;, 6]
[public, public, 7]
[func, func, 7]
[id, evaluate, 7]
[openpar, (, 7]
[id, x, 7]
[colon, :, 7]
[integer, integer, 7]
[closepar, ), 7]
[arrow, ->, 7]
[integer, integer, 7]
[semi, ;, 7]
[inlinecmt, // 9.2\n, 7]
[closecubr, }, 8]
[semi, ;, 8]
[struct, struct, 9]
[id, LINEAR, 9]
[inherits, inherits, 9]
[id, POLYNOMIAL, 9]
[opencubr, {, 9]
[private, private, 10]
[let, let, 10]
[id, a, 10]
[colon, :, 10]
[float, float, 10]
[semi, ;, 10]
[private, private, 11]
[let, let, 11]
[id, b, 11]
[colon, :, 11]
[float, float, 11]
[semi, ;, 11]
[private, private, 12]
[let, let, 12]
[id, b, 12]
[colon, :, 12]
[integer, integer, 12]
[semi, ;, 12]
[inlinecmt, // 8.3\n, 12]
[public, public, 14]
[func, func, 14]
[id, build, 14]
[openpar, (, 14]
[id, A, 14]
[colon, :, 14]
[float, float, 14]
[comma, ,, 14]
[id, B, 14]
[colon, :, 14]
[float, float, 14]
[closepar, ), 14]
[arrow, ->, 14]
[id, LINEAR, 14]
[semi, ;, 14]
[public, public, 15]
[func, func, 15]
[id, evaluate, 15]
[openpar, (, 15]
[id, x, 15]
[colon, :, 15]
[float, float, 15]
[closepar, ), 15]
[arrow, ->, 15]
[float, float, 15]
[semi, ;, 15]
[inlinecmt, // 9.3\n, 15]
[closecubr, }, 16]
[semi, ;, 16]
[struct, struct, 18]
[id, QUADRATIC, 18]
[inherits, inherits, 18]
[id, POLYNOMIAL, 18]
[opencubr, {, 18]
[private, private, 19]
[let, let, 19]
[id, a, 19]
[colon, :, 19]
[float, float, 19]
[semi, ;, 19]
[inlinecmt, // 8.5\n, 19]
[private, private, 20]
[let, let, 20]
[id, b, 20]
[colon, :, 20]
[float, float, 20]
[semi, ;, 20]
[inlinecmt, // 8.5\n, 20]
[private, private, 21]
[let, let, 21]
[id, c, 21]
[colon, :, 21]
[float, float, 21]
[semi, ;, 21]
[public, public, 23]
[func, func, 23]
[id, build, 23]
[openpar, (, 23]
[id, A, 23]
[colon, :, 23]
[float, float, 23]
[comma, ,, 23]
[id, B, 23]
[colon, :, 23]
[float, float, 23]
[comma, ,, 23]
[id, C, 23]
[colon, :, 23]
[float, float, 23]
[closepar, ), 23]
[arrow, ->, 23]
[id, QUADRATIC, 23]
[semi, ;, 23]
[public, public, 24]
[func, func, 24]
[id, evaluate, 24]
[openpar, (, 24]
[id, x, 24]
[colon, :, 24]
[float, float, 24]
[closepar, ), 24]
[arrow, ->, 24]
[float, float, 24]
[semi, ;, 24]
[inlinecmt, // 9.3\n, 24]
[closecubr, }, 25]
[semi, ;, 25]
[struct, struct, 27]
[id, C, 27]
[inherits, inherits, 27]
[id, E, 27]
[opencubr, {, 27]
[private, private, 28]
[let, let, 28]
[id, a, 28]
[colon, :, 28]
[integer, integer, 28]
[semi, ;, 28]
[closecubr, }, 29]
[semi, ;, 29]
[struct, struct, 31]
[id, D, 31]
[inherits, inherits, 31]
[id, C, 31]
[opencubr, {, 31]
[private, private, 32]
[let, let, 32]
[id, b, 32]
[colon, :, 32]
[integer, integer, 32]
[semi, ;, 32]
[closecubr, }, 33]
[semi, ;, 33]
[struct, struct, 35]
[id, E, 35]
[inherits, inherits, 35]
[id, D, 35]
[opencubr, {, 35]
[inlinecmt, // 14.1\n, 35]
[private, private, 36]
[let, let, 36]
[id, c, 36]
[colon, :, 36]
[integer, integer, 36]
[semi, ;, 36]
[closecubr, }, 37]
[semi, ;, 37]
[inlinecmt, // ====== struct implementations ====== //\n, 40]
[impl, impl, 41]
[id, POLYNOMIAL, 41]
[opencubr, {, 41]
[func, func, 42]
[id, evaluate, 42]
[openpar, (, 42]
[id, x, 42]
[colon, :, 42]
[float, float, 42]
[closepar, ), 42]
[arrow, ->, 42]
[float, float, 42]
[opencubr, {, 43]
[return, return, 44]
[openpar, (, 44]
[intnum, 0, 44]
[closepar, ), 44]
[semi, ;, 44]
[closecubr, }, 45]
[closecubr, }, 46]
[impl, impl, 48]
[id, LINEAR, 48]
[opencubr, {, 48]
[func, func, 49]
[id, build, 49]
[openpar, (, 49]
[id, A, 49]
[colon, :, 49]
[float, float, 49]
[comma, ,, 49]
[id, B, 49]
[colon, :, 49]
[float, float, 49]
[closepar, ), 49]
[arrow, ->, 49]
[id, LINEAR, 49]
[opencubr, {, 50]
[let, let, 51]
[id, new_function, 51]
[colon, :, 51]
[id, LINEAR, 51]
[semi, ;, 51]
[id, new_function, 52]
[dot, ., 52]
[id, a, 52]
[assign, =, 52]
[id, A, 52]
[semi, ;, 52]
[id, new_function, 53]
[dot, ., 53]
[id, b, 53]
[assign, =, 53]
[id, B, 53]
[semi, ;, 53]
[return, return, 54]
[openpar, (, 54]
[id, new_function, 54]
[closepar, ), 54]
[semi, ;, 54]
[closecubr, }, 55]
[func, func, 56]
[id, evaluate, 56]
[openpar, (, 56]
[id, x, 56]
[colon, :, 56]
[float, float, 56]
[closepar, ), 56]
[arrow, ->, 56]
[float, float, 56]
[opencubr, {, 57]
[let, let, 58]
[id, result, 58]
[colon, :, 58]
[float, float, 58]
[semi, ;, 58]
[id, result, 59]
[assign, =, 59]
[floatnum, 0.0, 59]
[semi, ;, 59]
[id, result, 60]
[assign, =, 60]
[id, a, 60]
[mult, *, 60]
[id, x, 60]
[plus, +, 60]
[id, b, 60]
[semi, ;, 60]
[return, return, 61]
[openpar, (, 61]
[id, result, 61]
[closepar, ), 61]
[semi, ;, 61]
[closecubr, }, 62]
[closecubr, }, 63]
[impl, impl, 65]
[id, QUADRATIC, 65]
[opencubr, {, 65]
[func, func, 66]
[id, evaluate, 66]
[openpar, (, 66]
[id, x, 66]
[colon, :, 66]
[float, float, 66]
[closepar, ), 66]
[arrow, ->, 66]
[float, float, 66]
[opencubr, {, 67]
[let, let, 68]
[id, result, 68]
[colon, :, 68]
[float, float, 68]
[semi, ;, 68]
[inlinecmt, //Using Horner's method\n, 69]
[id, result, 70]
[assign, =, 70]
[id, a, 70]
[semi, ;, 70]
[id, result, 71]
[assign, =, 71]
[id, result, 71]
[mult, *, 71]
[id, x, 71]
[plus, +, 71]
[id, b, 71]
[semi, ;, 71]
[id, result, 72]
[assign, =, 72]
[id, result, 72]
[mult, *, 72]
[id, x, 72]
[plus, +, 72]
[id, c, 72]
[semi, ;, 72]
[return, return, 73]
[openpar, (, 73]
[id, result, 73]
[closepar, ), 73]
[semi, ;, 73]
[closecubr, }, 74]
[func, func, 75]
[id, build, 75]
[openpar, (, 75]
[id, A, 75]
[colon, :, 75]
[float, float, 75]
[comma, ,, 75]
[id, B, 75]
[colon, :, 75]
[float, float, 75]
[comma, ,, 75]
[id, C, 75]
[colon, :, 75]
[float, float, 75]
[closepar, ), 75]
[arrow, ->, 75]
[id, QUADRATIC, 75]
[opencubr, {, 76]
[let, let, 77]
[id, new_function, 77]
[colon, :, 77]
[id, QUADRATIC, 77]
[semi, ;, 77]
[id, new_function, 78]
[dot, ., 78]
[id, a, 78]
[assign, =, 78]
[id, A, 78]
[plus, +, 78]
[id, B, 78]
[mult, *, 78]
[intnum, 3, 78]
[semi, ;, 78]
[inlinecmt, // 10.1\n, 78]
[id, new_function, 79]
[dot, ., 79]
[id, b, 79]
[assign, =, 79]
[id, B, 79]
[semi, ;, 79]
[id, new_function, 80]
[dot, ., 80]
[id, c, 80]
[assign, =, 80]
[intnum, 1, 80]
[semi, ;, 80]
[inlinecmt, // 10.2\n, 80]
[return, return, 81]
[openpar, (, 81]
[intnum, 1, 81]
[closepar, ), 81]
[semi, ;, 81]
[inlinecmt, // 10.3\n, 81]
[closecubr, }, 82]
[func, func, 83]
[id, build2, 83]
[openpar, (, 83]
[id, A, 83]
[colon, :, 83]
[float, float, 83]
[comma, ,, 83]
[id, B, 83]
[colon, :, 83]
[float, float, 83]
[comma, ,, 83]
[id, C, 83]
[colon, :, 83]
[float, float, 83]
[closepar, ), 83]
[arrow, ->, 83]
[id, QUADRATIC, 83]
[inlinecmt, // 6.1\n, 83]
[opencubr, {, 84]
[let, let, 85]
[id, new_function, 85]
[colon, :, 85]
[id, QUADRATIC, 85]
[semi, ;, 85]
[id, new_function, 86]
[dot, ., 86]
[id, a, 86]
[assign, =, 86]
[id, A, 86]
[semi, ;, 86]
[id, new_function, 87]
[dot, ., 87]
[id, b, 87]
[assign, =, 87]
[id, B, 87]
[semi, ;, 87]
[id, new_function, 88]
[dot, ., 88]
[id, c, 88]
[assign, =, 88]
[id, C, 88]
[semi, ;, 88]
[return, return, 89]
[openpar, (, 89]
[id, new_function, 89]
[closepar, ), 89]
[semi, ;, 89]
[closecubr, }, 90]
[closecubr, }, 91]
[$, $, 92]
