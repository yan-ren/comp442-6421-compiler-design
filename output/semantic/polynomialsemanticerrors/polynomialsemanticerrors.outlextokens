[inlinecmt, // ====== Class declarations ====== //\n, 1]
[struct, struct, 2]
[id, POLYNOMIAL, 2]
[opencubr, {, 2]
[public, public, 3]
[func, func, 3]
[id, evaluate, 3]
[openpar, (, 3]
[id, x, 3]
[colon, :, 3]
[float, float, 3]
[closepar, ), 3]
[arrow, ->, 3]
[float, float, 3]
[semi, ;, 3]
[public, public, 4]
[func, func, 4]
[id, evaluate2, 4]
[openpar, (, 4]
[id, x, 4]
[colon, :, 4]
[float, float, 4]
[closepar, ), 4]
[arrow, ->, 4]
[float, float, 4]
[semi, ;, 4]
[inlinecmt, // 6.2\n, 4]
[closecubr, }, 5]
[semi, ;, 5]
[struct, struct, 6]
[id, POLYNOMIAL, 6]
[opencubr, {, 6]
[inlinecmt, // 8.1\n, 6]
[public, public, 7]
[func, func, 7]
[id, evaluate, 7]
[openpar, (, 7]
[id, x, 7]
[colon, :, 7]
[float, float, 7]
[closepar, ), 7]
[arrow, ->, 7]
[float, float, 7]
[semi, ;, 7]
[public, public, 8]
[func, func, 8]
[id, evaluate, 8]
[openpar, (, 8]
[id, x, 8]
[colon, :, 8]
[integer, integer, 8]
[closepar, ), 8]
[arrow, ->, 8]
[integer, integer, 8]
[semi, ;, 8]
[inlinecmt, // 9.2\n, 8]
[closecubr, }, 9]
[semi, ;, 9]
[struct, struct, 10]
[id, LINEAR, 10]
[inherits, inherits, 10]
[id, POLYNOMIAL, 10]
[opencubr, {, 10]
[private, private, 11]
[let, let, 11]
[id, a, 11]
[colon, :, 11]
[float, float, 11]
[semi, ;, 11]
[private, private, 12]
[let, let, 12]
[id, b, 12]
[colon, :, 12]
[float, float, 12]
[semi, ;, 12]
[private, private, 13]
[let, let, 13]
[id, b, 13]
[colon, :, 13]
[integer, integer, 13]
[semi, ;, 13]
[inlinecmt, // 8.3\n, 13]
[public, public, 15]
[func, func, 15]
[id, build, 15]
[openpar, (, 15]
[id, A, 15]
[colon, :, 15]
[float, float, 15]
[comma, ,, 15]
[id, B, 15]
[colon, :, 15]
[float, float, 15]
[closepar, ), 15]
[arrow, ->, 15]
[id, LINEAR, 15]
[semi, ;, 15]
[public, public, 16]
[func, func, 16]
[id, evaluate, 16]
[openpar, (, 16]
[id, x, 16]
[colon, :, 16]
[float, float, 16]
[closepar, ), 16]
[arrow, ->, 16]
[float, float, 16]
[semi, ;, 16]
[inlinecmt, // 9.3\n, 16]
[closecubr, }, 17]
[semi, ;, 17]
[blockcmt, /*\nwon't catch 9.3 Overridden inherited member function, because circular dependency exists\n*/, 19]
[struct, struct, 23]
[id, QUADRATIC, 23]
[inherits, inherits, 23]
[id, POLYNOMIAL, 23]
[opencubr, {, 23]
[private, private, 24]
[let, let, 24]
[id, a, 24]
[colon, :, 24]
[float, float, 24]
[semi, ;, 24]
[inlinecmt, // 8.5\n, 24]
[private, private, 25]
[let, let, 25]
[id, b, 25]
[colon, :, 25]
[float, float, 25]
[semi, ;, 25]
[inlinecmt, // 8.5\n, 25]
[private, private, 26]
[let, let, 26]
[id, c, 26]
[colon, :, 26]
[float, float, 26]
[semi, ;, 26]
[public, public, 28]
[func, func, 28]
[id, build, 28]
[openpar, (, 28]
[id, A, 28]
[colon, :, 28]
[float, float, 28]
[comma, ,, 28]
[id, B, 28]
[colon, :, 28]
[float, float, 28]
[comma, ,, 28]
[id, C, 28]
[colon, :, 28]
[float, float, 28]
[closepar, ), 28]
[arrow, ->, 28]
[id, QUADRATIC, 28]
[semi, ;, 28]
[public, public, 29]
[func, func, 29]
[id, evaluate, 29]
[openpar, (, 29]
[id, x, 29]
[colon, :, 29]
[float, float, 29]
[closepar, ), 29]
[arrow, ->, 29]
[float, float, 29]
[semi, ;, 29]
[inlinecmt, // 9.3\n, 29]
[closecubr, }, 30]
[semi, ;, 30]
[struct, struct, 32]
[id, C, 32]
[inherits, inherits, 32]
[id, E, 32]
[opencubr, {, 32]
[private, private, 33]
[let, let, 33]
[id, a, 33]
[colon, :, 33]
[integer, integer, 33]
[semi, ;, 33]
[closecubr, }, 34]
[semi, ;, 34]
[struct, struct, 36]
[id, D, 36]
[inherits, inherits, 36]
[id, C, 36]
[opencubr, {, 36]
[private, private, 37]
[let, let, 37]
[id, b, 37]
[colon, :, 37]
[integer, integer, 37]
[semi, ;, 37]
[closecubr, }, 38]
[semi, ;, 38]
[struct, struct, 40]
[id, E, 40]
[inherits, inherits, 40]
[id, D, 40]
[opencubr, {, 40]
[inlinecmt, // 14.1\n, 40]
[private, private, 41]
[let, let, 41]
[id, c, 41]
[colon, :, 41]
[integer, integer, 41]
[semi, ;, 41]
[closecubr, }, 42]
[semi, ;, 42]
[inlinecmt, // ====== struct implementations ====== //\n, 45]
[impl, impl, 46]
[id, POLYNOMIAL, 46]
[opencubr, {, 46]
[func, func, 47]
[id, evaluate, 47]
[openpar, (, 47]
[id, x, 47]
[colon, :, 47]
[float, float, 47]
[closepar, ), 47]
[arrow, ->, 47]
[float, float, 47]
[opencubr, {, 48]
[return, return, 49]
[openpar, (, 49]
[intnum, 0, 49]
[closepar, ), 49]
[semi, ;, 49]
[closecubr, }, 50]
[closecubr, }, 51]
[impl, impl, 53]
[id, LINEAR, 53]
[opencubr, {, 53]
[func, func, 54]
[id, build, 54]
[openpar, (, 54]
[id, A, 54]
[colon, :, 54]
[float, float, 54]
[comma, ,, 54]
[id, B, 54]
[colon, :, 54]
[float, float, 54]
[closepar, ), 54]
[arrow, ->, 54]
[id, LINEAR, 54]
[opencubr, {, 55]
[let, let, 56]
[id, new_function, 56]
[colon, :, 56]
[id, LINEAR, 56]
[semi, ;, 56]
[id, new_function, 57]
[dot, ., 57]
[id, a, 57]
[assign, =, 57]
[id, A, 57]
[semi, ;, 57]
[id, new_function, 58]
[dot, ., 58]
[id, b, 58]
[assign, =, 58]
[id, B, 58]
[semi, ;, 58]
[return, return, 59]
[openpar, (, 59]
[id, new_function, 59]
[closepar, ), 59]
[semi, ;, 59]
[closecubr, }, 60]
[func, func, 61]
[id, evaluate, 61]
[openpar, (, 61]
[id, x, 61]
[colon, :, 61]
[float, float, 61]
[closepar, ), 61]
[arrow, ->, 61]
[float, float, 61]
[opencubr, {, 62]
[let, let, 63]
[id, result, 63]
[colon, :, 63]
[float, float, 63]
[semi, ;, 63]
[id, result, 64]
[assign, =, 64]
[floatnum, 0.0, 64]
[semi, ;, 64]
[id, result, 65]
[assign, =, 65]
[id, a, 65]
[mult, *, 65]
[id, x, 65]
[plus, +, 65]
[id, b, 65]
[semi, ;, 65]
[return, return, 66]
[openpar, (, 66]
[id, result, 66]
[closepar, ), 66]
[semi, ;, 66]
[closecubr, }, 67]
[closecubr, }, 68]
[impl, impl, 70]
[id, QUADRATIC, 70]
[opencubr, {, 70]
[func, func, 71]
[id, evaluate, 71]
[openpar, (, 71]
[id, x, 71]
[colon, :, 71]
[float, float, 71]
[closepar, ), 71]
[arrow, ->, 71]
[float, float, 71]
[opencubr, {, 72]
[let, let, 73]
[id, result, 73]
[colon, :, 73]
[float, float, 73]
[semi, ;, 73]
[inlinecmt, //Using Horner's method\n, 74]
[id, result, 75]
[assign, =, 75]
[id, a, 75]
[semi, ;, 75]
[id, result, 76]
[assign, =, 76]
[id, result, 76]
[mult, *, 76]
[id, x, 76]
[plus, +, 76]
[id, b, 76]
[semi, ;, 76]
[id, result, 77]
[assign, =, 77]
[id, result, 77]
[mult, *, 77]
[id, x, 77]
[plus, +, 77]
[id, c, 77]
[semi, ;, 77]
[return, return, 78]
[openpar, (, 78]
[id, result, 78]
[closepar, ), 78]
[semi, ;, 78]
[closecubr, }, 79]
[func, func, 80]
[id, build, 80]
[openpar, (, 80]
[id, A, 80]
[colon, :, 80]
[float, float, 80]
[comma, ,, 80]
[id, B, 80]
[colon, :, 80]
[float, float, 80]
[comma, ,, 80]
[id, C, 80]
[colon, :, 80]
[float, float, 80]
[closepar, ), 80]
[arrow, ->, 80]
[id, QUADRATIC, 80]
[opencubr, {, 81]
[let, let, 82]
[id, new_function, 82]
[colon, :, 82]
[id, QUADRATIC, 82]
[semi, ;, 82]
[id, new_function, 83]
[dot, ., 83]
[id, a, 83]
[assign, =, 83]
[id, A, 83]
[plus, +, 83]
[id, B, 83]
[mult, *, 83]
[intnum, 3, 83]
[semi, ;, 83]
[inlinecmt, // 10.1\n, 83]
[id, new_function, 84]
[dot, ., 84]
[id, b, 84]
[assign, =, 84]
[id, B, 84]
[semi, ;, 84]
[id, new_function, 85]
[dot, ., 85]
[id, c, 85]
[assign, =, 85]
[intnum, 1, 85]
[semi, ;, 85]
[inlinecmt, // 10.2\n, 85]
[return, return, 86]
[openpar, (, 86]
[intnum, 1, 86]
[closepar, ), 86]
[semi, ;, 86]
[inlinecmt, // 10.3\n, 86]
[closecubr, }, 87]
[func, func, 88]
[id, build2, 88]
[openpar, (, 88]
[id, A, 88]
[colon, :, 88]
[float, float, 88]
[comma, ,, 88]
[id, B, 88]
[colon, :, 88]
[float, float, 88]
[comma, ,, 88]
[id, C, 88]
[colon, :, 88]
[float, float, 88]
[closepar, ), 88]
[arrow, ->, 88]
[id, QUADRATIC, 88]
[inlinecmt, // 6.1\n, 88]
[opencubr, {, 89]
[let, let, 90]
[id, new_function, 90]
[colon, :, 90]
[id, QUADRATIC, 90]
[semi, ;, 90]
[id, new_function, 91]
[dot, ., 91]
[id, a, 91]
[assign, =, 91]
[id, A, 91]
[semi, ;, 91]
[id, new_function, 92]
[dot, ., 92]
[id, b, 92]
[assign, =, 92]
[id, B, 92]
[semi, ;, 92]
[id, new_function, 93]
[dot, ., 93]
[id, c, 93]
[assign, =, 93]
[id, C, 93]
[semi, ;, 93]
[return, return, 94]
[openpar, (, 94]
[id, new_function, 94]
[closepar, ), 94]
[semi, ;, 94]
[closecubr, }, 95]
[closecubr, }, 96]
[func, func, 98]
[id, f, 98]
[openpar, (, 98]
[id, i, 98]
[colon, :, 98]
[integer, integer, 98]
[closepar, ), 98]
[arrow, ->, 98]
[void, void, 98]
[opencubr, {, 98]
[closecubr, }, 98]
[func, func, 99]
[id, f, 99]
[openpar, (, 99]
[id, i, 99]
[colon, :, 99]
[integer, integer, 99]
[closepar, ), 99]
[arrow, ->, 99]
[void, void, 99]
[opencubr, {, 99]
[closecubr, }, 99]
[inlinecmt, // 8.2\n, 99]
[func, func, 100]
[id, f, 100]
[openpar, (, 100]
[id, i, 100]
[colon, :, 100]
[integer, integer, 100]
[comma, ,, 100]
[id, j, 100]
[colon, :, 100]
[integer, integer, 100]
[closepar, ), 100]
[arrow, ->, 100]
[integer, integer, 100]
[opencubr, {, 100]
[closecubr, }, 100]
[inlinecmt, // 9.1\n, 100]
[func, func, 102]
[id, f3, 102]
[openpar, (, 102]
[id, p1, 102]
[colon, :, 102]
[integer, integer, 102]
[opensqbr, [, 102]
[intnum, 2, 102]
[closesqbr, ], 102]
[opensqbr, [, 102]
[intnum, 3, 102]
[closesqbr, ], 102]
[closepar, ), 102]
[arrow, ->, 102]
[integer, integer, 102]
[opencubr, {, 102]
[closecubr, }, 102]
[inlinecmt, // ====== main ====== //\n, 105]
[func, func, 106]
[id, main, 106]
[openpar, (, 106]
[closepar, ), 106]
[arrow, ->, 106]
[void, void, 106]
[opencubr, {, 107]
[let, let, 108]
[id, a, 108]
[colon, :, 108]
[id, a, 108]
[semi, ;, 108]
[inlinecmt, // 11.5\n, 108]
[let, let, 109]
[id, c, 109]
[colon, :, 109]
[id, C, 109]
[semi, ;, 109]
[let, let, 110]
[id, f1, 110]
[colon, :, 110]
[id, LINEAR, 110]
[semi, ;, 110]
[let, let, 111]
[id, f2, 111]
[colon, :, 111]
[id, QUADRATIC, 111]
[semi, ;, 111]
[let, let, 112]
[id, counter, 112]
[colon, :, 112]
[integer, integer, 112]
[semi, ;, 112]
[let, let, 113]
[id, counter, 113]
[colon, :, 113]
[float, float, 113]
[semi, ;, 113]
[inlinecmt, // 8.4\n, 113]
[let, let, 114]
[id, i, 114]
[colon, :, 114]
[integer, integer, 114]
[opensqbr, [, 114]
[intnum, 2, 114]
[closesqbr, ], 114]
[opensqbr, [, 114]
[intnum, 3, 114]
[closesqbr, ], 114]
[semi, ;, 114]
[let, let, 115]
[id, j, 115]
[colon, :, 115]
[integer, integer, 115]
[opensqbr, [, 115]
[intnum, 1, 115]
[closesqbr, ], 115]
[opensqbr, [, 115]
[intnum, 2, 115]
[closesqbr, ], 115]
[opensqbr, [, 115]
[intnum, 3, 115]
[closesqbr, ], 115]
[semi, ;, 115]
[id, f1, 116]
[assign, =, 116]
[id, f1, 116]
[dot, ., 116]
[id, build, 116]
[openpar, (, 116]
[intnum, 2, 116]
[comma, ,, 116]
[floatnum, 3.5, 116]
[closepar, ), 116]
[semi, ;, 116]
[id, f2, 117]
[assign, =, 117]
[id, f2, 117]
[dot, ., 117]
[id, build, 117]
[openpar, (, 117]
[minus, -, 117]
[floatnum, 2.0, 117]
[comma, ,, 117]
[floatnum, 1.0, 117]
[comma, ,, 117]
[floatnum, 0.0, 117]
[closepar, ), 117]
[semi, ;, 117]
[id, c, 118]
[dot, ., 118]
[id, b, 118]
[assign, =, 118]
[intnum, 1, 118]
[semi, ;, 118]
[inlinecmt, // 11.2\n, 118]
[id, counter, 119]
[assign, =, 119]
[id, c, 119]
[dot, ., 119]
[id, f, 119]
[openpar, (, 119]
[closepar, ), 119]
[semi, ;, 119]
[inlinecmt, // 11.3\n, 119]
[id, undefined, 120]
[openpar, (, 120]
[closepar, ), 120]
[semi, ;, 120]
[inlinecmt, // 11.4\n, 120]
[id, counter, 121]
[assign, =, 121]
[id, d, 121]
[semi, ;, 121]
[inlinecmt, // 11.1\n, 121]
[id, f, 122]
[openpar, (, 122]
[intnum, 1, 122]
[comma, ,, 122]
[intnum, 1, 122]
[comma, ,, 122]
[intnum, 1, 122]
[closepar, ), 122]
[semi, ;, 122]
[inlinecmt, // 12.1\n, 122]
[id, f, 123]
[openpar, (, 123]
[floatnum, 1.2, 123]
[comma, ,, 123]
[intnum, 1, 123]
[closepar, ), 123]
[semi, ;, 123]
[inlinecmt, // 12.2\n, 123]
[id, i, 124]
[opensqbr, [, 124]
[intnum, 2, 124]
[closesqbr, ], 124]
[assign, =, 124]
[intnum, 1, 124]
[semi, ;, 124]
[inlinecmt, // 13.1\n, 124]
[id, i, 125]
[opensqbr, [, 125]
[intnum, 2, 125]
[closesqbr, ], 125]
[opensqbr, [, 125]
[floatnum, 1.3, 125]
[closesqbr, ], 125]
[assign, =, 125]
[intnum, 2, 125]
[semi, ;, 125]
[inlinecmt, // 13.2\n, 125]
[id, f3, 126]
[openpar, (, 126]
[id, j, 126]
[closepar, ), 126]
[semi, ;, 126]
[inlinecmt, // 13.3\n, 126]
[id, counter, 127]
[dot, ., 127]
[id, x, 127]
[assign, =, 127]
[intnum, 1, 127]
[semi, ;, 127]
[inlinecmt, // 15.1\n, 127]
[while, while, 128]
[openpar, (, 128]
[id, counter, 128]
[leq, <=, 128]
[intnum, 10, 128]
[closepar, ), 128]
[opencubr, {, 129]
[write, write, 130]
[openpar, (, 130]
[id, counter, 130]
[closepar, ), 130]
[semi, ;, 130]
[write, write, 131]
[openpar, (, 131]
[id, f1, 131]
[dot, ., 131]
[id, evaluate, 131]
[openpar, (, 131]
[id, counter, 131]
[closepar, ), 131]
[closepar, ), 131]
[semi, ;, 131]
[write, write, 132]
[openpar, (, 132]
[id, f2, 132]
[dot, ., 132]
[id, evaluate, 132]
[openpar, (, 132]
[id, counter, 132]
[closepar, ), 132]
[closepar, ), 132]
[semi, ;, 132]
[closecubr, }, 133]
[semi, ;, 133]
[closecubr, }, 134]
[blockcmt, /*\n-1.   |X| global symbol table\n-2.   |X| class symbol table\n-3.1  |X| class data member\n-3.2  |X| function's local variable\n-4.1  |X| free function\n-4.2  |X| member function\n\n--6.1  |X| undeclared member function definition\n--6.2  |X| undefined member function declaration\n\n--8.1  |X| multiply declared class\n--8.2  |X| multiply defined free function\n--8.3  |X| multiply declared identifier in class\n--8.4  |X| multiply declared identifier in function\n--8.5  |X| shadowed inherited data member\n--8.6  |X| multiply declared function in class\n\n--9.1  |X| Overloaded free function\n--9.2  |X| Overloaded member function\n--9.3  |X| Overridden inherited member function\n\n--10.1 |X| Type error in expression\n--10.2 |X| Type error in assignment statement\n--10.3 |X| Type error in return statement\n\n--11.1 |X| Undeclared local variable\n--11.2 |X| Undeclared data member\n--11.3 |X| Undeclared member function\n\n--11.2.1 Undeclared variable (if function is member function, check in the class for member used as variable)\n--11.2.2 Undeclared variable (if function is member function, and its class inherits search in all super classes' tables for member used as variable)\n\n--11.2.3 Undeclared data member (search in class table)\n--11.2.4 Undeclared data member (if class inherits from other classes, search in all super classes' tables)\n\n--11.3.1 Undeclared member function (search in class table)\n--11.3.2 Undeclared member function (if class ihherits from other classes, search in all super classes' tables)\n\n--11.4 |X| Undeclared free function\n--11.5 |X| Undeclared class\n\n--12.1 |X| Function call with wrong number of parameters\n--12.2 |X| Function call with wrong type of parameters\n\n--13.1 |X| Use of array with wrong number of dimensions\n--13.2 |X| Array index is not an integer\n--13.3 |X| Array parameter using wrong number of dimensions\n\n--14.1 |X| Circular class dependency\n\n--15.1 |X| \".\" operator used on non-class type\n*/, 136]
[$, $, 189]
