[inlinecmt, // ====== struct declarations ====== //\n, 1]
[struct, struct, 4]
[id, LINEAR, 4]
[opencubr, {, 4]
[public, public, 5]
[let, let, 5]
[id, a, 5]
[colon, :, 5]
[integer, integer, 5]
[semi, ;, 5]
[public, public, 6]
[let, let, 6]
[id, b, 6]
[colon, :, 6]
[integer, integer, 6]
[semi, ;, 6]
[public, public, 7]
[func, func, 7]
[id, build, 7]
[openpar, (, 7]
[id, A, 7]
[colon, :, 7]
[integer, integer, 7]
[comma, ,, 7]
[id, B, 7]
[colon, :, 7]
[integer, integer, 7]
[closepar, ), 7]
[arrow, ->, 7]
[id, LINEAR, 7]
[semi, ;, 7]
[public, public, 8]
[func, func, 8]
[id, evaluate, 8]
[openpar, (, 8]
[id, x, 8]
[colon, :, 8]
[integer, integer, 8]
[closepar, ), 8]
[arrow, ->, 8]
[integer, integer, 8]
[semi, ;, 8]
[closecubr, }, 9]
[semi, ;, 9]
[impl, impl, 11]
[id, LINEAR, 11]
[opencubr, {, 11]
[func, func, 12]
[id, build, 12]
[openpar, (, 12]
[id, A, 12]
[colon, :, 12]
[integer, integer, 12]
[comma, ,, 12]
[id, B, 12]
[colon, :, 12]
[integer, integer, 12]
[closepar, ), 12]
[arrow, ->, 12]
[id, LINEAR, 12]
[inlinecmt, // 2.1, 2.2\n, 12]
[opencubr, {, 13]
[let, let, 14]
[id, new_function, 14]
[colon, :, 14]
[id, LINEAR, 14]
[semi, ;, 14]
[inlinecmt, // 1.3\n, 14]
[id, new_function, 15]
[dot, ., 15]
[id, a, 15]
[assign, =, 15]
[id, A, 15]
[semi, ;, 15]
[inlinecmt, // 3.1, 5.3\n, 15]
[id, new_function, 16]
[dot, ., 16]
[id, b, 16]
[assign, =, 16]
[id, B, 16]
[semi, ;, 16]
[inlinecmt, // 3.1, 5.3\n, 16]
[return, return, 17]
[openpar, (, 17]
[id, new_function, 17]
[closepar, ), 17]
[semi, ;, 17]
[inlinecmt, // 2.3\n, 17]
[closecubr, }, 18]
[func, func, 19]
[id, evaluate, 19]
[openpar, (, 19]
[id, x, 19]
[colon, :, 19]
[integer, integer, 19]
[closepar, ), 19]
[arrow, ->, 19]
[integer, integer, 19]
[inlinecmt, // 2.1, 2.2\n, 19]
[opencubr, {, 20]
[let, let, 21]
[id, result, 21]
[colon, :, 21]
[integer, integer, 21]
[semi, ;, 21]
[inlinecmt, // 1.1\n, 21]
[id, result, 22]
[assign, =, 22]
[intnum, 0, 22]
[semi, ;, 22]
[inlinecmt, // 3.1\n, 22]
[id, result, 23]
[assign, =, 23]
[id, b, 23]
[plus, +, 23]
[id, a, 23]
[mult, *, 23]
[id, x, 23]
[semi, ;, 23]
[inlinecmt, // 3.1, 5.1\n, 23]
[write, write, 24]
[openpar, (, 24]
[id, result, 24]
[closepar, ), 24]
[semi, ;, 24]
[return, return, 25]
[openpar, (, 25]
[id, result, 25]
[closepar, ), 25]
[semi, ;, 25]
[inlinecmt, // 2.3\n, 25]
[closecubr, }, 26]
[closecubr, }, 27]
[inlinecmt, // ====== main ====== //\n, 29]
[func, func, 30]
[id, main, 30]
[openpar, (, 30]
[closepar, ), 30]
[arrow, ->, 30]
[void, void, 30]
[inlinecmt, // 2.1, 2.2\n, 30]
[opencubr, {, 31]
[let, let, 32]
[id, l1, 32]
[colon, :, 32]
[id, LINEAR, 32]
[semi, ;, 32]
[inlinecmt, // 1.3\n, 32]
[let, let, 33]
[id, temp, 33]
[colon, :, 33]
[integer, integer, 33]
[semi, ;, 33]
[id, l1, 35]
[dot, ., 35]
[id, a, 35]
[assign, =, 35]
[intnum, 1, 35]
[semi, ;, 35]
[id, temp, 36]
[assign, =, 36]
[id, l1, 36]
[dot, ., 36]
[id, a, 36]
[semi, ;, 36]
[write, write, 37]
[openpar, (, 37]
[id, temp, 37]
[closepar, ), 37]
[semi, ;, 37]
[id, l1, 39]
[dot, ., 39]
[id, b, 39]
[assign, =, 39]
[id, l1, 39]
[dot, ., 39]
[id, a, 39]
[semi, ;, 39]
[write, write, 40]
[openpar, (, 40]
[id, l1, 40]
[dot, ., 40]
[id, b, 40]
[closepar, ), 40]
[semi, ;, 40]
[id, l1, 42]
[dot, ., 42]
[id, evaluate, 42]
[openpar, (, 42]
[intnum, 3, 42]
[closepar, ), 42]
[semi, ;, 42]
[write, write, 43]
[openpar, (, 43]
[id, l1, 43]
[dot, ., 43]
[id, a, 43]
[plus, +, 43]
[id, l1, 43]
[dot, ., 43]
[id, b, 43]
[closepar, ), 43]
[semi, ;, 43]
[closecubr, }, 44]
[$, $, 45]
