[func, func, 1]
[id, debug, 1]
[openpar, (, 1]
[closepar, ), 1]
[arrow, ->, 1]
[void, void, 1]
[opencubr, {, 2]
[inlinecmt, //let v : integer[2][3];\n, 3]
[inlinecmt, //let v : integer[2][3];\n, 4]
[inlinecmt, //a.b[c].d = 1;\n, 5]
[id, a, 6]
[dot, ., 6]
[id, b, 6]
[assign, =, 6]
[intnum, 1, 6]
[semi, ;, 6]
[closecubr, }, 7]
[blockcmt, /*\nstruct LINEAR {\n\tprivate let a: float;\n\tprivate let b: float[];\n\tpublic  func build(A: float, B: float) -> LINEAR;\n\tpublic  func evaluate(x: float) -> float;\n};\n*/, 10]
[blockcmt, /*\nstruct LINEAR {\n\tprivate let a: float;\n\tprivate let b: float;\n\tpublic  func build(A: float, B: float) -> LINEAR;\n\tpublic  func evaluate(x: float) -> float;\n};\n*/, 18]
[$, $, 26]
