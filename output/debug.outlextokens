[func, func, 1]
[id, debug, 1]
[openpar, (, 1]
[closepar, ), 1]
[arrow, ->, 1]
[void, void, 1]
[opencubr, {, 2]
[id, a, 3]
[dot, ., 3]
[id, b, 3]
[opensqbr, [, 3]
[id, c, 3]
[closesqbr, ], 3]
[dot, ., 3]
[id, d, 3]
[assign, =, 3]
[intnum, 1, 3]
[semi, ;, 3]
[id, a, 4]
[dot, ., 4]
[id, b, 4]
[dot, ., 4]
[id, c, 4]
[assign, =, 4]
[intnum, 2, 4]
[semi, ;, 4]
[closecubr, }, 5]
[inlinecmt, //let v : integer[2][3];\n, 8]
[inlinecmt, //let v : integer[2][3];\n, 9]
[blockcmt, /*\nstruct LINEAR {\n\tprivate let a: float;\n\tprivate let b: float[];\n\tpublic  func build(A: float, B: float) -> LINEAR;\n\tpublic  func evaluate(x: float) -> float;\n};\n*/, 10]
[blockcmt, /*\nstruct LINEAR {\n\tprivate let a: float;\n\tprivate let b: float;\n\tpublic  func build(A: float, B: float) -> LINEAR;\n\tpublic  func evaluate(x: float) -> float;\n};\n*/, 18]
[$, $, 26]
