[blockcmt, /*\nAll supplement test for parser\n*/, 1]
[blockcmt, /*\nclass declaration\nmultiple class declarations\nno main function definition\n*/, 5]
[struct, struct, 10]
[id, A, 10]
[opencubr, {, 10]
[public, public, 11]
[func, func, 11]
[id, aFunc, 11]
[openpar, (, 11]
[id, x, 11]
[colon, :, 11]
[float, float, 11]
[closepar, ), 11]
[arrow, ->, 11]
[float, float, 11]
[semi, ;, 11]
[closecubr, }, 12]
[semi, ;, 12]
[struct, struct, 14]
[id, B, 14]
[opencubr, {, 14]
[public, public, 15]
[func, func, 15]
[id, bFunc, 15]
[openpar, (, 15]
[id, x, 15]
[colon, :, 15]
[float, float, 15]
[closepar, ), 15]
[arrow, ->, 15]
[float, float, 15]
[semi, ;, 15]
[closecubr, }, 16]
[semi, ;, 16]
[struct, struct, 18]
[id, C, 18]
[inherits, inherits, 18]
[id, A, 18]
[comma, ,, 18]
[id, B, 18]
[opencubr, {, 18]
[private, private, 19]
[let, let, 19]
[id, a, 19]
[colon, :, 19]
[float, float, 19]
[semi, ;, 19]
[private, private, 20]
[let, let, 20]
[id, b, 20]
[colon, :, 20]
[float, float, 20]
[semi, ;, 20]
[public, public, 21]
[func, func, 21]
[id, build, 21]
[openpar, (, 21]
[id, x, 21]
[colon, :, 21]
[float, float, 21]
[comma, ,, 21]
[id, y, 21]
[colon, :, 21]
[float, float, 21]
[closepar, ), 21]
[arrow, ->, 21]
[integer, integer, 21]
[semi, ;, 21]
[public, public, 22]
[func, func, 22]
[id, evaluate, 22]
[openpar, (, 22]
[id, z, 22]
[colon, :, 22]
[float, float, 22]
[closepar, ), 22]
[arrow, ->, 22]
[float, float, 22]
[semi, ;, 22]
[closecubr, }, 23]
[semi, ;, 23]
[inlinecmt, // no member function declaration\n, 25]
[inlinecmt, // no local variable declarations\n, 26]
[inlinecmt, // no statement\n, 27]
[func, func, 28]
[id, emptyFunc, 28]
[openpar, (, 28]
[closepar, ), 28]
[arrow, ->, 28]
[void, void, 28]
[opencubr, {, 29]
[closecubr, }, 31]
[inlinecmt, // no member\n, 33]
[struct, struct, 34]
[id, emptyStruct, 34]
[opencubr, {, 34]
[closecubr, }, 36]
[semi, ;, 36]
[blockcmt, /*\nreturn type: integer\n*/, 38]
[func, func, 41]
[id, sum, 41]
[openpar, (, 41]
[id, a, 41]
[colon, :, 41]
[integer, integer, 41]
[comma, ,, 41]
[id, b, 41]
[colon, :, 41]
[integer, integer, 41]
[closepar, ), 41]
[arrow, ->, 41]
[integer, integer, 41]
[opencubr, {, 42]
[return, return, 43]
[openpar, (, 43]
[id, a, 43]
[plus, +, 43]
[id, b, 43]
[closepar, ), 43]
[semi, ;, 43]
[closecubr, }, 44]
[blockcmt, /*\ntype: id\ntype: n-dim array\ntype: array (with size)\n*/, 46]
[func, func, 51]
[id, formalParameter, 51]
[openpar, (, 51]
[id, in, 51]
[colon, :, 51]
[integer, integer, 51]
[opensqbr, [, 51]
[intnum, 1, 51]
[closesqbr, ], 51]
[opensqbr, [, 51]
[intnum, 1, 51]
[closesqbr, ], 51]
[comma, ,, 51]
[id, size, 51]
[colon, :, 51]
[id, A, 51]
[closepar, ), 51]
[arrow, ->, 51]
[void, void, 51]
[opencubr, {, 52]
[let, let, 53]
[id, arr, 53]
[colon, :, 53]
[integer, integer, 53]
[opensqbr, [, 53]
[intnum, 7, 53]
[closesqbr, ], 53]
[opensqbr, [, 53]
[intnum, 7, 53]
[closesqbr, ], 53]
[semi, ;, 53]
[closecubr, }, 54]
[blockcmt, /*\nparameters:0\narray parameter - n-dim\narray parameter - with size\narray parameter - without size\nexpression as parameter\n*/, 56]
[func, func, 63]
[id, functionCalls, 63]
[openpar, (, 63]
[id, n1, 63]
[colon, :, 63]
[integer, integer, 63]
[opensqbr, [, 63]
[closesqbr, ], 63]
[opensqbr, [, 63]
[closesqbr, ], 63]
[comma, ,, 63]
[id, n2, 63]
[colon, :, 63]
[integer, integer, 63]
[opensqbr, [, 63]
[intnum, 2, 63]
[closesqbr, ], 63]
[opensqbr, [, 63]
[intnum, 2, 63]
[closesqbr, ], 63]
[closepar, ), 63]
[arrow, ->, 63]
[void, void, 63]
[opencubr, {, 64]
[id, emptyFunc, 65]
[openpar, (, 65]
[closepar, ), 65]
[semi, ;, 65]
[id, functionCalls, 66]
[openpar, (, 66]
[id, n1, 66]
[comma, ,, 66]
[id, n2, 66]
[closepar, ), 66]
[semi, ;, 66]
[id, sum, 67]
[openpar, (, 67]
[id, a, 67]
[plus, +, 67]
[id, b, 67]
[closepar, ), 67]
[semi, ;, 67]
[closecubr, }, 68]
[blockcmt, /*\nvariable declaration\n\ntype: float\ntype: string\ntype: 1-dim array \ntype: n-dim array\ntype: array (without size)\n*/, 70]
[func, func, 79]
[id, variableDeclaration, 79]
[openpar, (, 79]
[closepar, ), 79]
[arrow, ->, 79]
[void, void, 79]
[opencubr, {, 80]
[let, let, 81]
[id, a, 81]
[colon, :, 81]
[float, float, 81]
[semi, ;, 81]
[let, let, 82]
[id, b, 82]
[colon, :, 82]
[id, string, 82]
[semi, ;, 82]
[let, let, 83]
[id, c, 83]
[colon, :, 83]
[integer, integer, 83]
[opensqbr, [, 83]
[closesqbr, ], 83]
[semi, ;, 83]
[let, let, 84]
[id, d, 84]
[colon, :, 84]
[integer, integer, 84]
[opensqbr, [, 84]
[closesqbr, ], 84]
[opensqbr, [, 84]
[closesqbr, ], 84]
[semi, ;, 84]
[let, let, 85]
[id, e, 85]
[colon, :, 85]
[integer, integer, 85]
[opensqbr, [, 85]
[intnum, 1, 85]
[closesqbr, ], 85]
[opensqbr, [, 85]
[intnum, 1, 85]
[closesqbr, ], 85]
[semi, ;, 85]
[closecubr, }, 86]
[blockcmt, /*\nif: 1-statement then or else blocks\nwhile: empty block\nwhile: 1-statement block\n*/, 88]
[func, func, 93]
[id, functionBody, 93]
[openpar, (, 93]
[id, a, 93]
[colon, :, 93]
[integer, integer, 93]
[comma, ,, 93]
[id, b, 93]
[colon, :, 93]
[integer, integer, 93]
[closepar, ), 93]
[arrow, ->, 93]
[void, void, 93]
[opencubr, {, 94]
[if, if, 95]
[openpar, (, 95]
[id, a, 95]
[gt, >, 95]
[id, b, 95]
[closepar, ), 95]
[then, then, 96]
[opencubr, {, 96]
[id, a, 97]
[assign, =, 97]
[id, b, 97]
[semi, ;, 97]
[closecubr, }, 98]
[else, else, 98]
[semi, ;, 98]
[while, while, 100]
[openpar, (, 100]
[id, a, 100]
[gt, >, 100]
[id, b, 100]
[closepar, ), 100]
[opencubr, {, 101]
[closecubr, }, 103]
[semi, ;, 103]
[while, while, 105]
[openpar, (, 105]
[id, a, 105]
[gt, >, 105]
[id, b, 105]
[closepar, ), 105]
[opencubr, {, 106]
[read, read, 107]
[openpar, (, 107]
[id, b, 107]
[closepar, ), 107]
[semi, ;, 107]
[closecubr, }, 108]
[semi, ;, 108]
[closecubr, }, 109]
[func, func, 111]
[id, expression, 111]
[openpar, (, 111]
[closepar, ), 111]
[arrow, ->, 111]
[void, void, 111]
[opencubr, {, 112]
[let, let, 113]
[id, a, 113]
[colon, :, 113]
[integer, integer, 113]
[semi, ;, 113]
[let, let, 114]
[id, b, 114]
[colon, :, 114]
[integer, integer, 114]
[semi, ;, 114]
[let, let, 115]
[id, c, 115]
[colon, :, 115]
[integer, integer, 115]
[semi, ;, 115]
[let, let, 116]
[id, d, 116]
[colon, :, 116]
[id, boolean, 116]
[semi, ;, 116]
[id, a, 117]
[assign, =, 117]
[intnum, 1, 117]
[semi, ;, 117]
[id, b, 118]
[assign, =, 118]
[intnum, 2, 118]
[semi, ;, 118]
[id, c, 119]
[assign, =, 119]
[id, a, 119]
[mult, *, 119]
[id, b, 119]
[semi, ;, 119]
[if, if, 120]
[openpar, (, 120]
[id, a, 120]
[plus, +, 120]
[id, b, 120]
[mult, *, 120]
[id, a, 120]
[gt, >, 120]
[id, b, 120]
[closepar, ), 120]
[then, then, 121]
[opencubr, {, 121]
[id, a, 122]
[assign, =, 122]
[id, b, 122]
[semi, ;, 122]
[closecubr, }, 123]
[else, else, 123]
[semi, ;, 123]
[id, c, 125]
[assign, =, 125]
[openpar, (, 125]
[id, a, 125]
[plus, +, 125]
[id, b, 125]
[closepar, ), 125]
[mult, *, 125]
[id, b, 125]
[semi, ;, 125]
[id, c, 126]
[assign, =, 126]
[openpar, (, 126]
[id, a, 126]
[plus, +, 126]
[openpar, (, 126]
[id, a, 126]
[plus, +, 126]
[id, b, 126]
[closepar, ), 126]
[closepar, ), 126]
[mult, *, 126]
[id, b, 126]
[semi, ;, 126]
[id, c, 127]
[assign, =, 127]
[minus, -, 127]
[intnum, 1, 127]
[mult, *, 127]
[id, a, 127]
[semi, ;, 127]
[write, write, 128]
[openpar, (, 128]
[not, !, 128]
[openpar, (, 128]
[id, a, 128]
[plus, +, 128]
[id, b, 128]
[closepar, ), 128]
[closepar, ), 128]
[semi, ;, 128]
[write, write, 129]
[openpar, (, 129]
[openpar, (, 129]
[id, sum, 129]
[openpar, (, 129]
[id, a, 129]
[comma, ,, 129]
[id, b, 129]
[closepar, ), 129]
[plus, +, 129]
[id, a, 129]
[mult, *, 129]
[id, b, 129]
[closepar, ), 129]
[gt, >, 129]
[id, sum, 129]
[openpar, (, 129]
[id, a, 129]
[comma, ,, 129]
[id, b, 129]
[closepar, ), 129]
[closepar, ), 129]
[semi, ;, 129]
[closecubr, }, 130]
[$, $, 131]
