[inlinecmt, // Assignment 5 coverage:\n, 1]
[inlinecmt, //      -------------\n, 2]
[inlinecmt, //      | YES | NO  |\n, 3]
[inlinecmt, //      ------------- \n, 4]
[inlinecmt, // 1.1: |  X  |     |\n, 5]
[inlinecmt, // 1.2: |     |  X  |\n, 6]
[inlinecmt, // 1.3: |     |  X  |\n, 7]
[inlinecmt, // 1.4: |     |  X  |\n, 8]
[inlinecmt, // 2.1: |     |  X  |\n, 9]
[inlinecmt, // 2.2: |     |  X  |\n, 10]
[inlinecmt, // 2.3: |     |  X  |\n, 11]
[inlinecmt, // 2.4: |     |  X  |\n, 12]
[inlinecmt, // 3.1: |  X  |     |\n, 13]
[inlinecmt, // 3.2: |  X  |     |\n, 14]
[inlinecmt, // 3.3: |  X  |     |\n, 15]
[inlinecmt, // 3.4: |  X  |     |\n, 16]
[inlinecmt, // 4.1: |     |  X  |\n, 17]
[inlinecmt, // 4.2: |     |  X  | \n, 18]
[inlinecmt, // 4.3: |     |  X  | \n, 19]
[inlinecmt, // 4.4: |     |  X  |\n, 20]
[inlinecmt, // 5.1: |  X  |     |\n, 21]
[inlinecmt, // 5.2: |     |  X  |\n, 22]
[inlinecmt, // 5.3: |     |  X  |\n, 23]
[inlinecmt, //      -------------\n, 24]
[func, func, 26]
[id, main, 26]
[openpar, (, 26]
[closepar, ), 26]
[arrow, ->, 26]
[void, void, 26]
[opencubr, {, 27]
[let, let, 28]
[id, x, 28]
[colon, :, 28]
[integer, integer, 28]
[semi, ;, 28]
[inlinecmt, // 1.1\n, 28]
[let, let, 29]
[id, y, 29]
[colon, :, 29]
[integer, integer, 29]
[semi, ;, 29]
[inlinecmt, // 1.1\n, 29]
[let, let, 30]
[id, z, 30]
[colon, :, 30]
[integer, integer, 30]
[semi, ;, 30]
[inlinecmt, // 1.1\n, 30]
[id, y, 31]
[assign, =, 31]
[intnum, 1, 31]
[plus, +, 31]
[intnum, 2, 31]
[mult, *, 31]
[intnum, 3, 31]
[semi, ;, 31]
[inlinecmt, // 3.1, 5.1\n, 31]
[read, read, 32]
[openpar, (, 32]
[id, x, 32]
[closepar, ), 32]
[semi, ;, 32]
[inlinecmt, // 3.4\n, 32]
[if, if, 33]
[openpar, (, 33]
[id, x, 33]
[gt, >, 33]
[id, y, 33]
[plus, +, 33]
[intnum, 10, 33]
[closepar, ), 33]
[inlinecmt, // 3.2, 5.1   \n, 33]
[then, then, 34]
[write, write, 35]
[openpar, (, 35]
[id, x, 35]
[plus, +, 35]
[intnum, 10, 35]
[closepar, ), 35]
[semi, ;, 35]
[inlinecmt, // 3.4, 5.1 \n, 35]
[else, else, 36]
[write, write, 37]
[openpar, (, 37]
[id, x, 37]
[plus, +, 37]
[intnum, 1, 37]
[closepar, ), 37]
[semi, ;, 37]
[inlinecmt, // 3.4, 5.1\n, 37]
[semi, ;, 38]
[id, z, 39]
[assign, =, 39]
[intnum, 0, 39]
[semi, ;, 39]
[inlinecmt, // 3.1\n, 39]
[while, while, 40]
[openpar, (, 40]
[id, z, 40]
[leq, <=, 40]
[intnum, 10, 40]
[closepar, ), 40]
[inlinecmt, // 3.3, 5.1\n, 40]
[write, write, 41]
[openpar, (, 41]
[id, z, 41]
[closepar, ), 41]
[semi, ;, 41]
[inlinecmt, // 3.4\n, 41]
[semi, ;, 42]
[closecubr, }, 43]
[$, $, 44]
