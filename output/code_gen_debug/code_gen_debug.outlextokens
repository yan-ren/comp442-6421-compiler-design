[func, func, 1]
[id, main, 1]
[openpar, (, 1]
[closepar, ), 1]
[arrow, ->, 1]
[void, void, 1]
[opencubr, {, 2]
[let, let, 3]
[id, x, 3]
[colon, :, 3]
[integer, integer, 3]
[semi, ;, 3]
[inlinecmt, // 1.1\n, 3]
[let, let, 4]
[id, y, 4]
[colon, :, 4]
[integer, integer, 4]
[semi, ;, 4]
[inlinecmt, // 1.1\n, 4]
[let, let, 5]
[id, z, 5]
[colon, :, 5]
[integer, integer, 5]
[semi, ;, 5]
[inlinecmt, // 1.1\n, 5]
[blockcmt, /*\n  y = 1 + 2 * 3;                                   // 3.1, 5.1\n  read(x);                                         // 3.4\n  if (x > y + 10)                                  // 3.2, 5.1\n  then\n    write(x+10);                                   // 3.4, 5.1\n  else\n    write(x+1);                                    // 3.4, 5.1\n  ;\n  */, 6]
[id, z, 16]
[assign, =, 16]
[intnum, 0, 16]
[semi, ;, 16]
[inlinecmt, // 3.1\n, 16]
[while, while, 17]
[openpar, (, 17]
[id, z, 17]
[leq, <=, 17]
[intnum, 10, 17]
[closepar, ), 17]
[opencubr, {, 17]
[inlinecmt, // 3.3, 5.1\n, 17]
[write, write, 18]
[openpar, (, 18]
[id, z, 18]
[closepar, ), 18]
[semi, ;, 18]
[inlinecmt, // 3.4\n, 18]
[id, z, 19]
[assign, =, 19]
[id, z, 19]
[plus, +, 19]
[intnum, 1, 19]
[semi, ;, 19]
[closecubr, }, 20]
[semi, ;, 20]
[closecubr, }, 22]
[$, $, 23]
