[inlinecmt, // ====== Class declarations ====== //\n, 1]
[struct, struct, 2]
[id, POLYNOMIAL, 2]
[opencubr, {, 2]
[public, public, 3]
[func, func, 3]
[id, evaluate, 3]
[openpar, (, 3]
[id, x, 3]
[colon, :, 3]
[float, float, 3]
[closepar, ), 3]
[arrow, ->, 3]
[float, float, 3]
[semi, ;, 3]
[public, public, 4]
[func, func, 4]
[id, evaluate2, 4]
[openpar, (, 4]
[id, x, 4]
[colon, :, 4]
[float, float, 4]
[closepar, ), 4]
[arrow, ->, 4]
[float, float, 4]
[semi, ;, 4]
[inlinecmt, // 6.2\n, 4]
[closecubr, }, 5]
[semi, ;, 5]
[struct, struct, 6]
[id, POLYNOMIAL, 6]
[opencubr, {, 6]
[inlinecmt, // 8.1\n, 6]
[public, public, 7]
[func, func, 7]
[id, evaluate, 7]
[openpar, (, 7]
[id, x, 7]
[colon, :, 7]
[float, float, 7]
[closepar, ), 7]
[arrow, ->, 7]
[float, float, 7]
[semi, ;, 7]
[public, public, 8]
[func, func, 8]
[id, evaluate, 8]
[openpar, (, 8]
[id, x, 8]
[colon, :, 8]
[integer, integer, 8]
[closepar, ), 8]
[arrow, ->, 8]
[integer, integer, 8]
[semi, ;, 8]
[inlinecmt, // 9.2\n, 8]
[closecubr, }, 9]
[semi, ;, 9]
[struct, struct, 10]
[id, LINEAR, 10]
[inherits, inherits, 10]
[id, POLYNOMIAL, 10]
[opencubr, {, 10]
[private, private, 11]
[let, let, 11]
[id, a, 11]
[colon, :, 11]
[float, float, 11]
[semi, ;, 11]
[private, private, 12]
[let, let, 12]
[id, b, 12]
[colon, :, 12]
[float, float, 12]
[semi, ;, 12]
[private, private, 13]
[let, let, 13]
[id, b, 13]
[colon, :, 13]
[integer, integer, 13]
[semi, ;, 13]
[inlinecmt, // 8.3\n, 13]
[public, public, 15]
[func, func, 15]
[id, build, 15]
[openpar, (, 15]
[id, A, 15]
[colon, :, 15]
[float, float, 15]
[comma, ,, 15]
[id, B, 15]
[colon, :, 15]
[float, float, 15]
[closepar, ), 15]
[arrow, ->, 15]
[id, LINEAR, 15]
[semi, ;, 15]
[public, public, 16]
[func, func, 16]
[id, evaluate, 16]
[openpar, (, 16]
[id, x, 16]
[colon, :, 16]
[float, float, 16]
[closepar, ), 16]
[arrow, ->, 16]
[float, float, 16]
[semi, ;, 16]
[inlinecmt, // 9.3\n, 16]
[closecubr, }, 17]
[semi, ;, 17]
[struct, struct, 19]
[id, QUADRATIC, 19]
[inherits, inherits, 19]
[id, POLYNOMIAL, 19]
[opencubr, {, 19]
[private, private, 20]
[let, let, 20]
[id, a, 20]
[colon, :, 20]
[float, float, 20]
[semi, ;, 20]
[inlinecmt, // 8.5\n, 20]
[private, private, 21]
[let, let, 21]
[id, b, 21]
[colon, :, 21]
[float, float, 21]
[semi, ;, 21]
[inlinecmt, // 8.5\n, 21]
[private, private, 22]
[let, let, 22]
[id, c, 22]
[colon, :, 22]
[float, float, 22]
[semi, ;, 22]
[public, public, 24]
[func, func, 24]
[id, build, 24]
[openpar, (, 24]
[id, A, 24]
[colon, :, 24]
[float, float, 24]
[comma, ,, 24]
[id, B, 24]
[colon, :, 24]
[float, float, 24]
[comma, ,, 24]
[id, C, 24]
[colon, :, 24]
[float, float, 24]
[closepar, ), 24]
[arrow, ->, 24]
[id, QUADRATIC, 24]
[semi, ;, 24]
[public, public, 25]
[func, func, 25]
[id, evaluate, 25]
[openpar, (, 25]
[id, x, 25]
[colon, :, 25]
[float, float, 25]
[closepar, ), 25]
[arrow, ->, 25]
[float, float, 25]
[semi, ;, 25]
[inlinecmt, // 9.3\n, 25]
[closecubr, }, 26]
[semi, ;, 26]
[struct, struct, 28]
[id, C, 28]
[inherits, inherits, 28]
[id, E, 28]
[opencubr, {, 28]
[private, private, 29]
[let, let, 29]
[id, a, 29]
[colon, :, 29]
[integer, integer, 29]
[semi, ;, 29]
[closecubr, }, 30]
[semi, ;, 30]
[struct, struct, 32]
[id, D, 32]
[inherits, inherits, 32]
[id, C, 32]
[opencubr, {, 32]
[private, private, 33]
[let, let, 33]
[id, b, 33]
[colon, :, 33]
[integer, integer, 33]
[semi, ;, 33]
[closecubr, }, 34]
[semi, ;, 34]
[struct, struct, 36]
[id, E, 36]
[inherits, inherits, 36]
[id, D, 36]
[opencubr, {, 36]
[inlinecmt, // 14.1\n, 36]
[private, private, 37]
[let, let, 37]
[id, c, 37]
[colon, :, 37]
[integer, integer, 37]
[semi, ;, 37]
[closecubr, }, 38]
[semi, ;, 38]
[inlinecmt, // ====== struct implementations ====== //\n, 41]
[impl, impl, 42]
[id, POLYNOMIAL, 42]
[opencubr, {, 42]
[func, func, 43]
[id, evaluate, 43]
[openpar, (, 43]
[id, x, 43]
[colon, :, 43]
[float, float, 43]
[closepar, ), 43]
[arrow, ->, 43]
[float, float, 43]
[opencubr, {, 44]
[return, return, 45]
[openpar, (, 45]
[intnum, 0, 45]
[closepar, ), 45]
[semi, ;, 45]
[closecubr, }, 46]
[closecubr, }, 47]
[impl, impl, 49]
[id, LINEAR, 49]
[opencubr, {, 49]
[func, func, 50]
[id, build, 50]
[openpar, (, 50]
[id, A, 50]
[colon, :, 50]
[float, float, 50]
[comma, ,, 50]
[id, B, 50]
[colon, :, 50]
[float, float, 50]
[closepar, ), 50]
[arrow, ->, 50]
[id, LINEAR, 50]
[opencubr, {, 51]
[let, let, 52]
[id, new_function, 52]
[colon, :, 52]
[id, LINEAR, 52]
[semi, ;, 52]
[id, new_function, 53]
[dot, ., 53]
[id, a, 53]
[assign, =, 53]
[id, A, 53]
[semi, ;, 53]
[id, new_function, 54]
[dot, ., 54]
[id, b, 54]
[assign, =, 54]
[id, B, 54]
[semi, ;, 54]
[return, return, 55]
[openpar, (, 55]
[id, new_function, 55]
[closepar, ), 55]
[semi, ;, 55]
[closecubr, }, 56]
[func, func, 57]
[id, evaluate, 57]
[openpar, (, 57]
[id, x, 57]
[colon, :, 57]
[float, float, 57]
[closepar, ), 57]
[arrow, ->, 57]
[float, float, 57]
[opencubr, {, 58]
[let, let, 59]
[id, result, 59]
[colon, :, 59]
[float, float, 59]
[semi, ;, 59]
[id, result, 60]
[assign, =, 60]
[floatnum, 0.0, 60]
[semi, ;, 60]
[id, result, 61]
[assign, =, 61]
[id, a, 61]
[mult, *, 61]
[id, x, 61]
[plus, +, 61]
[id, b, 61]
[semi, ;, 61]
[return, return, 62]
[openpar, (, 62]
[id, result, 62]
[closepar, ), 62]
[semi, ;, 62]
[closecubr, }, 63]
[closecubr, }, 64]
[impl, impl, 66]
[id, QUADRATIC, 66]
[opencubr, {, 66]
[func, func, 67]
[id, evaluate, 67]
[openpar, (, 67]
[id, x, 67]
[colon, :, 67]
[float, float, 67]
[closepar, ), 67]
[arrow, ->, 67]
[float, float, 67]
[opencubr, {, 68]
[let, let, 69]
[id, result, 69]
[colon, :, 69]
[float, float, 69]
[semi, ;, 69]
[inlinecmt, //Using Horner's method\n, 70]
[id, result, 71]
[assign, =, 71]
[id, a, 71]
[semi, ;, 71]
[id, result, 72]
[assign, =, 72]
[id, result, 72]
[mult, *, 72]
[id, x, 72]
[plus, +, 72]
[id, b, 72]
[semi, ;, 72]
[id, result, 73]
[assign, =, 73]
[id, result, 73]
[mult, *, 73]
[id, x, 73]
[plus, +, 73]
[id, c, 73]
[semi, ;, 73]
[return, return, 74]
[openpar, (, 74]
[id, result, 74]
[closepar, ), 74]
[semi, ;, 74]
[closecubr, }, 75]
[func, func, 76]
[id, build, 76]
[openpar, (, 76]
[id, A, 76]
[colon, :, 76]
[float, float, 76]
[comma, ,, 76]
[id, B, 76]
[colon, :, 76]
[float, float, 76]
[comma, ,, 76]
[id, C, 76]
[colon, :, 76]
[float, float, 76]
[closepar, ), 76]
[arrow, ->, 76]
[id, QUADRATIC, 76]
[opencubr, {, 77]
[let, let, 78]
[id, new_function, 78]
[colon, :, 78]
[id, QUADRATIC, 78]
[semi, ;, 78]
[id, new_function, 79]
[dot, ., 79]
[id, a, 79]
[assign, =, 79]
[id, A, 79]
[plus, +, 79]
[id, B, 79]
[mult, *, 79]
[intnum, 3, 79]
[semi, ;, 79]
[inlinecmt, // 10.1\n, 79]
[id, new_function, 80]
[dot, ., 80]
[id, b, 80]
[assign, =, 80]
[id, B, 80]
[semi, ;, 80]
[id, new_function, 81]
[dot, ., 81]
[id, c, 81]
[assign, =, 81]
[intnum, 1, 81]
[semi, ;, 81]
[inlinecmt, // 10.2\n, 81]
[return, return, 82]
[openpar, (, 82]
[intnum, 1, 82]
[closepar, ), 82]
[semi, ;, 82]
[inlinecmt, // 10.3\n, 82]
[closecubr, }, 83]
[func, func, 84]
[id, build2, 84]
[openpar, (, 84]
[id, A, 84]
[colon, :, 84]
[float, float, 84]
[comma, ,, 84]
[id, B, 84]
[colon, :, 84]
[float, float, 84]
[comma, ,, 84]
[id, C, 84]
[colon, :, 84]
[float, float, 84]
[closepar, ), 84]
[arrow, ->, 84]
[id, QUADRATIC, 84]
[inlinecmt, // 6.1\n, 84]
[opencubr, {, 85]
[let, let, 86]
[id, new_function, 86]
[colon, :, 86]
[id, QUADRATIC, 86]
[semi, ;, 86]
[id, new_function, 87]
[dot, ., 87]
[id, a, 87]
[assign, =, 87]
[id, A, 87]
[semi, ;, 87]
[id, new_function, 88]
[dot, ., 88]
[id, b, 88]
[assign, =, 88]
[id, B, 88]
[semi, ;, 88]
[id, new_function, 89]
[dot, ., 89]
[id, c, 89]
[assign, =, 89]
[id, C, 89]
[semi, ;, 89]
[return, return, 90]
[openpar, (, 90]
[id, new_function, 90]
[closepar, ), 90]
[semi, ;, 90]
[closecubr, }, 91]
[closecubr, }, 92]
[func, func, 94]
[id, f, 94]
[openpar, (, 94]
[id, i, 94]
[colon, :, 94]
[integer, integer, 94]
[closepar, ), 94]
[arrow, ->, 94]
[void, void, 94]
[opencubr, {, 94]
[closecubr, }, 94]
[func, func, 95]
[id, f, 95]
[openpar, (, 95]
[id, i, 95]
[colon, :, 95]
[integer, integer, 95]
[closepar, ), 95]
[arrow, ->, 95]
[void, void, 95]
[opencubr, {, 95]
[closecubr, }, 95]
[inlinecmt, // 8.2\n, 95]
[func, func, 96]
[id, f, 96]
[openpar, (, 96]
[id, i, 96]
[colon, :, 96]
[integer, integer, 96]
[comma, ,, 96]
[id, j, 96]
[colon, :, 96]
[integer, integer, 96]
[closepar, ), 96]
[arrow, ->, 96]
[integer, integer, 96]
[opencubr, {, 96]
[closecubr, }, 96]
[inlinecmt, // 9.1\n, 96]
[func, func, 98]
[id, f3, 98]
[openpar, (, 98]
[id, p1, 98]
[colon, :, 98]
[integer, integer, 98]
[opensqbr, [, 98]
[intnum, 2, 98]
[closesqbr, ], 98]
[opensqbr, [, 98]
[intnum, 3, 98]
[closesqbr, ], 98]
[closepar, ), 98]
[arrow, ->, 98]
[integer, integer, 98]
[opencubr, {, 98]
[closecubr, }, 98]
[inlinecmt, // ====== main ====== //\n, 101]
[func, func, 102]
[id, main, 102]
[openpar, (, 102]
[closepar, ), 102]
[arrow, ->, 102]
[void, void, 102]
[opencubr, {, 103]
[let, let, 104]
[id, a, 104]
[colon, :, 104]
[id, a, 104]
[semi, ;, 104]
[inlinecmt, // 11.5\n, 104]
[let, let, 105]
[id, c, 105]
[colon, :, 105]
[id, C, 105]
[semi, ;, 105]
[let, let, 106]
[id, f1, 106]
[colon, :, 106]
[id, LINEAR, 106]
[semi, ;, 106]
[let, let, 107]
[id, f2, 107]
[colon, :, 107]
[id, QUADRATIC, 107]
[semi, ;, 107]
[let, let, 108]
[id, counter, 108]
[colon, :, 108]
[integer, integer, 108]
[semi, ;, 108]
[let, let, 109]
[id, counter, 109]
[colon, :, 109]
[float, float, 109]
[semi, ;, 109]
[inlinecmt, // 8.4\n, 109]
[let, let, 110]
[id, i, 110]
[colon, :, 110]
[integer, integer, 110]
[opensqbr, [, 110]
[intnum, 2, 110]
[closesqbr, ], 110]
[opensqbr, [, 110]
[intnum, 3, 110]
[closesqbr, ], 110]
[semi, ;, 110]
[let, let, 111]
[id, j, 111]
[colon, :, 111]
[integer, integer, 111]
[opensqbr, [, 111]
[intnum, 1, 111]
[closesqbr, ], 111]
[opensqbr, [, 111]
[intnum, 2, 111]
[closesqbr, ], 111]
[opensqbr, [, 111]
[intnum, 3, 111]
[closesqbr, ], 111]
[semi, ;, 111]
[id, f1, 112]
[assign, =, 112]
[id, f1, 112]
[dot, ., 112]
[id, build, 112]
[openpar, (, 112]
[intnum, 2, 112]
[comma, ,, 112]
[floatnum, 3.5, 112]
[closepar, ), 112]
[semi, ;, 112]
[id, f2, 113]
[assign, =, 113]
[id, f2, 113]
[dot, ., 113]
[id, build, 113]
[openpar, (, 113]
[minus, -, 113]
[floatnum, 2.0, 113]
[comma, ,, 113]
[floatnum, 1.0, 113]
[comma, ,, 113]
[floatnum, 0.0, 113]
[closepar, ), 113]
[semi, ;, 113]
[id, c, 114]
[dot, ., 114]
[id, b, 114]
[assign, =, 114]
[intnum, 1, 114]
[semi, ;, 114]
[inlinecmt, // 11.2\n, 114]
[id, counter, 115]
[assign, =, 115]
[id, c, 115]
[dot, ., 115]
[id, f, 115]
[openpar, (, 115]
[closepar, ), 115]
[semi, ;, 115]
[inlinecmt, // 11.3\n, 115]
[id, undefined, 116]
[openpar, (, 116]
[closepar, ), 116]
[semi, ;, 116]
[inlinecmt, // 11.4\n, 116]
[id, counter, 117]
[assign, =, 117]
[id, d, 117]
[semi, ;, 117]
[inlinecmt, // 11.1\n, 117]
[id, f, 118]
[openpar, (, 118]
[intnum, 1, 118]
[comma, ,, 118]
[intnum, 1, 118]
[comma, ,, 118]
[intnum, 1, 118]
[closepar, ), 118]
[semi, ;, 118]
[inlinecmt, // 12.1\n, 118]
[id, f, 119]
[openpar, (, 119]
[floatnum, 1.2, 119]
[comma, ,, 119]
[intnum, 1, 119]
[closepar, ), 119]
[semi, ;, 119]
[inlinecmt, // 12.2\n, 119]
[id, i, 120]
[opensqbr, [, 120]
[intnum, 2, 120]
[closesqbr, ], 120]
[assign, =, 120]
[intnum, 1, 120]
[semi, ;, 120]
[inlinecmt, // 13.1\n, 120]
[id, i, 121]
[opensqbr, [, 121]
[intnum, 2, 121]
[closesqbr, ], 121]
[opensqbr, [, 121]
[floatnum, 1.3, 121]
[closesqbr, ], 121]
[assign, =, 121]
[intnum, 2, 121]
[semi, ;, 121]
[inlinecmt, // 13.2\n, 121]
[id, f3, 122]
[openpar, (, 122]
[id, j, 122]
[closepar, ), 122]
[semi, ;, 122]
[inlinecmt, // 13.3\n, 122]
[id, counter, 123]
[dot, ., 123]
[id, x, 123]
[assign, =, 123]
[intnum, 1, 123]
[semi, ;, 123]
[inlinecmt, // 15.1\n, 123]
[while, while, 124]
[openpar, (, 124]
[id, counter, 124]
[leq, <=, 124]
[intnum, 10, 124]
[closepar, ), 124]
[opencubr, {, 125]
[write, write, 126]
[openpar, (, 126]
[id, counter, 126]
[closepar, ), 126]
[semi, ;, 126]
[write, write, 127]
[openpar, (, 127]
[id, f1, 127]
[dot, ., 127]
[id, evaluate, 127]
[openpar, (, 127]
[id, counter, 127]
[closepar, ), 127]
[closepar, ), 127]
[semi, ;, 127]
[write, write, 128]
[openpar, (, 128]
[id, f2, 128]
[dot, ., 128]
[id, evaluate, 128]
[openpar, (, 128]
[id, counter, 128]
[closepar, ), 128]
[closepar, ), 128]
[semi, ;, 128]
[closecubr, }, 129]
[semi, ;, 129]
[closecubr, }, 130]
[blockcmt, /*\n-1.   |X| global symbol table\n-2.   |X| class symbol table\n-3.1  |X| class data member\n-3.2  |X| function's local variable\n-4.1  |X| free function\n-4.2  |X| member function\n-6.1  |X| undeclared member function definition\n-6.2  |X| undefined member function declaration\n-8.1  |X| multiply declared class\n-8.2  |X| multiply defined free function\n-8.3  |X| multiply declared identifier in class\n-8.4  |X| multiply declared identifier in function\n-8.5  |X| shadowed inherited data member\n9.1  |X| Overloaded free function\n9.2  |X| Overloaded member function\n-9.3  |X| Overridden inherited member function\n10.1 |X| Type error in expression\n10.2 |X| Type error in assignment statement\n10.3 |X| Type error in return statement\n-11.1 |X| Undeclared local variable\n11.2 |X| Undeclared data member\n11.3 |X| Undeclared member function\n-11.4 |X| Undeclared free function\n-11.5 |X| Undeclared class\n-12.1 |X| Function call with wrong number of parameters\n-12.2 |X| Function call with wrong type of parameters\n13.1 |X| Use of array with wrong number of dimensions\n13.2 |X| Array index is not an integer\n13.3 |X| Array parameter using wrong number of dimensions\n14.1 |X| Circular class dependency\n-15.1 |X| \".\" operator used on non-class type\n*/, 132]
[$, $, 165]
