[blockcmt, /*\nclass declaration\nmultiple class declarations\nno main function definition\n*/, 1]
[struct, struct, 6]
[id, A, 6]
[opencubr, {, 6]
[public, public, 7]
[func, func, 7]
[id, aFunc, 7]
[openpar, (, 7]
[id, x, 7]
[colon, :, 7]
[float, float, 7]
[closepar, ), 7]
[arrow, ->, 7]
[float, float, 7]
[semi, ;, 7]
[closecubr, }, 8]
[semi, ;, 8]
[struct, struct, 10]
[id, B, 10]
[opencubr, {, 10]
[public, public, 11]
[func, func, 11]
[id, bFunc, 11]
[openpar, (, 11]
[id, x, 11]
[colon, :, 11]
[float, float, 11]
[closepar, ), 11]
[arrow, ->, 11]
[float, float, 11]
[semi, ;, 11]
[closecubr, }, 12]
[semi, ;, 12]
[struct, struct, 14]
[id, C, 14]
[inherits, inherits, 14]
[id, A, 14]
[comma, ,, 14]
[id, B, 14]
[opencubr, {, 14]
[private, private, 15]
[let, let, 15]
[id, a, 15]
[colon, :, 15]
[float, float, 15]
[semi, ;, 15]
[private, private, 16]
[let, let, 16]
[id, b, 16]
[colon, :, 16]
[float, float, 16]
[semi, ;, 16]
[public, public, 17]
[func, func, 17]
[id, build, 17]
[openpar, (, 17]
[id, x, 17]
[colon, :, 17]
[float, float, 17]
[comma, ,, 17]
[id, y, 17]
[colon, :, 17]
[float, float, 17]
[closepar, ), 17]
[arrow, ->, 17]
[integer, integer, 17]
[semi, ;, 17]
[public, public, 18]
[func, func, 18]
[id, evaluate, 18]
[openpar, (, 18]
[id, z, 18]
[colon, :, 18]
[float, float, 18]
[closepar, ), 18]
[arrow, ->, 18]
[float, float, 18]
[semi, ;, 18]
[closecubr, }, 19]
[semi, ;, 19]
[inlinecmt, // no member function declaration\n, 21]
[inlinecmt, // no local variable declarations\n, 22]
[inlinecmt, // no statement\n, 23]
[func, func, 24]
[id, emptyFunc, 24]
[openpar, (, 24]
[closepar, ), 24]
[arrow, ->, 24]
[void, void, 24]
[opencubr, {, 25]
[closecubr, }, 27]
[inlinecmt, // no member\n, 29]
[struct, struct, 30]
[id, emptyStruct, 30]
[opencubr, {, 30]
[closecubr, }, 32]
[semi, ;, 32]
[blockcmt, /*\nreturn type: integer\n*/, 34]
[func, func, 37]
[id, sum, 37]
[openpar, (, 37]
[id, a, 37]
[colon, :, 37]
[integer, integer, 37]
[comma, ,, 37]
[id, b, 37]
[colon, :, 37]
[integer, integer, 37]
[closepar, ), 37]
[arrow, ->, 37]
[integer, integer, 37]
[opencubr, {, 38]
[return, return, 39]
[openpar, (, 39]
[id, a, 39]
[plus, +, 39]
[id, b, 39]
[closepar, ), 39]
[semi, ;, 39]
[closecubr, }, 40]
[blockcmt, /*\ntype: id\ntype: n-dim array\ntype: array (with size)\n*/, 42]
[func, func, 47]
[id, formalParameter, 47]
[openpar, (, 47]
[id, in, 47]
[colon, :, 47]
[integer, integer, 47]
[opensqbr, [, 47]
[intnum, 1, 47]
[closesqbr, ], 47]
[opensqbr, [, 47]
[intnum, 1, 47]
[closesqbr, ], 47]
[comma, ,, 47]
[id, size, 47]
[colon, :, 47]
[id, A, 47]
[closepar, ), 47]
[arrow, ->, 47]
[void, void, 47]
[opencubr, {, 48]
[let, let, 49]
[id, arr, 49]
[colon, :, 49]
[integer, integer, 49]
[opensqbr, [, 49]
[intnum, 7, 49]
[closesqbr, ], 49]
[opensqbr, [, 49]
[intnum, 7, 49]
[closesqbr, ], 49]
[semi, ;, 49]
[closecubr, }, 50]
[blockcmt, /*\nparameters:0\narray parameter - n-dim\narray parameter - with size\narray parameter - without size\nexpression as parameter\n*/, 52]
[func, func, 59]
[id, functionCalls, 59]
[openpar, (, 59]
[id, n1, 59]
[colon, :, 59]
[integer, integer, 59]
[opensqbr, [, 59]
[closesqbr, ], 59]
[opensqbr, [, 59]
[closesqbr, ], 59]
[comma, ,, 59]
[id, n2, 59]
[colon, :, 59]
[integer, integer, 59]
[opensqbr, [, 59]
[intnum, 2, 59]
[closesqbr, ], 59]
[opensqbr, [, 59]
[intnum, 2, 59]
[closesqbr, ], 59]
[closepar, ), 59]
[arrow, ->, 59]
[void, void, 59]
[opencubr, {, 60]
[id, emptyFunc, 61]
[openpar, (, 61]
[closepar, ), 61]
[semi, ;, 61]
[id, functionCalls, 62]
[openpar, (, 62]
[id, n1, 62]
[comma, ,, 62]
[id, n2, 62]
[closepar, ), 62]
[semi, ;, 62]
[id, sum, 63]
[openpar, (, 63]
[id, a, 63]
[plus, +, 63]
[id, b, 63]
[closepar, ), 63]
[semi, ;, 63]
[closecubr, }, 64]
[blockcmt, /*\nvariable declaration\n\ntype: float\ntype: string\ntype: 1-dim array \ntype: n-dim array\ntype: array (without size)\n*/, 66]
[func, func, 75]
[id, variableDeclaration, 75]
[openpar, (, 75]
[closepar, ), 75]
[arrow, ->, 75]
[void, void, 75]
[opencubr, {, 76]
[let, let, 77]
[id, a, 77]
[colon, :, 77]
[float, float, 77]
[semi, ;, 77]
[let, let, 78]
[id, b, 78]
[colon, :, 78]
[id, string, 78]
[semi, ;, 78]
[let, let, 79]
[id, c, 79]
[colon, :, 79]
[integer, integer, 79]
[opensqbr, [, 79]
[closesqbr, ], 79]
[semi, ;, 79]
[let, let, 80]
[id, d, 80]
[colon, :, 80]
[integer, integer, 80]
[opensqbr, [, 80]
[closesqbr, ], 80]
[opensqbr, [, 80]
[closesqbr, ], 80]
[semi, ;, 80]
[let, let, 81]
[id, e, 81]
[colon, :, 81]
[integer, integer, 81]
[opensqbr, [, 81]
[intnum, 1, 81]
[closesqbr, ], 81]
[opensqbr, [, 81]
[intnum, 1, 81]
[closesqbr, ], 81]
[semi, ;, 81]
[closecubr, }, 82]
[blockcmt, /*\nif: 1-statement then or else blocks\nwhile: empty block\nwhile: 1-statement block\n*/, 84]
[func, func, 89]
[id, functionBody, 89]
[openpar, (, 89]
[id, a, 89]
[colon, :, 89]
[integer, integer, 89]
[comma, ,, 89]
[id, b, 89]
[colon, :, 89]
[integer, integer, 89]
[closepar, ), 89]
[arrow, ->, 89]
[void, void, 89]
[opencubr, {, 90]
[if, if, 91]
[openpar, (, 91]
[id, a, 91]
[gt, >, 91]
[id, b, 91]
[closepar, ), 91]
[then, then, 92]
[opencubr, {, 92]
[id, a, 93]
[assign, =, 93]
[id, b, 93]
[semi, ;, 93]
[closecubr, }, 94]
[else, else, 94]
[semi, ;, 94]
[while, while, 96]
[openpar, (, 96]
[id, a, 96]
[gt, >, 96]
[id, b, 96]
[closepar, ), 96]
[opencubr, {, 97]
[closecubr, }, 99]
[semi, ;, 99]
[while, while, 101]
[openpar, (, 101]
[id, a, 101]
[gt, >, 101]
[id, b, 101]
[closepar, ), 101]
[opencubr, {, 102]
[read, read, 103]
[openpar, (, 103]
[id, b, 103]
[closepar, ), 103]
[semi, ;, 103]
[closecubr, }, 104]
[semi, ;, 104]
[closecubr, }, 105]
[func, func, 107]
[id, expression, 107]
[openpar, (, 107]
[closepar, ), 107]
[arrow, ->, 107]
[void, void, 107]
[opencubr, {, 108]
[let, let, 109]
[id, a, 109]
[colon, :, 109]
[integer, integer, 109]
[semi, ;, 109]
[let, let, 110]
[id, b, 110]
[colon, :, 110]
[integer, integer, 110]
[semi, ;, 110]
[let, let, 111]
[id, c, 111]
[colon, :, 111]
[integer, integer, 111]
[semi, ;, 111]
[let, let, 112]
[id, d, 112]
[colon, :, 112]
[id, boolean, 112]
[semi, ;, 112]
[id, a, 113]
[assign, =, 113]
[intnum, 1, 113]
[semi, ;, 113]
[id, b, 114]
[assign, =, 114]
[intnum, 2, 114]
[semi, ;, 114]
[id, c, 115]
[assign, =, 115]
[id, a, 115]
[mult, *, 115]
[id, b, 115]
[semi, ;, 115]
[if, if, 116]
[openpar, (, 116]
[id, a, 116]
[plus, +, 116]
[id, b, 116]
[mult, *, 116]
[id, a, 116]
[gt, >, 116]
[id, b, 116]
[closepar, ), 116]
[then, then, 117]
[opencubr, {, 117]
[id, a, 118]
[assign, =, 118]
[id, b, 118]
[semi, ;, 118]
[closecubr, }, 119]
[else, else, 119]
[semi, ;, 119]
[id, c, 121]
[assign, =, 121]
[openpar, (, 121]
[id, a, 121]
[plus, +, 121]
[id, b, 121]
[closepar, ), 121]
[mult, *, 121]
[id, b, 121]
[semi, ;, 121]
[id, c, 122]
[assign, =, 122]
[openpar, (, 122]
[id, a, 122]
[plus, +, 122]
[openpar, (, 122]
[id, a, 122]
[plus, +, 122]
[id, b, 122]
[closepar, ), 122]
[closepar, ), 122]
[mult, *, 122]
[id, b, 122]
[semi, ;, 122]
[id, c, 123]
[assign, =, 123]
[minus, -, 123]
[intnum, 1, 123]
[mult, *, 123]
[id, a, 123]
[semi, ;, 123]
[write, write, 124]
[openpar, (, 124]
[not, !, 124]
[openpar, (, 124]
[id, a, 124]
[plus, +, 124]
[id, b, 124]
[closepar, ), 124]
[closepar, ), 124]
[semi, ;, 124]
[write, write, 125]
[openpar, (, 125]
[openpar, (, 125]
[id, sum, 125]
[openpar, (, 125]
[id, a, 125]
[comma, ,, 125]
[id, b, 125]
[closepar, ), 125]
[plus, +, 125]
[id, a, 125]
[mult, *, 125]
[id, b, 125]
[closepar, ), 125]
[gt, >, 125]
[id, sum, 125]
[openpar, (, 125]
[id, a, 125]
[comma, ,, 125]
[id, b, 125]
[closepar, ), 125]
[closepar, ), 125]
[semi, ;, 125]
[closecubr, }, 126]
[$, $, 127]
