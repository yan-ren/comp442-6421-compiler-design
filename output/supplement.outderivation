START
START => PROG
START => REPTPROG0
START => STRUCTORIMPLORFUNC REPTPROG0
START => STRUCTDECL REPTPROG0
START => struct id OPTSTRUCTDECL2 opencubr REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr VISIBILITY MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public FUNCDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public FUNCHEAD semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar FPARAMS closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon TYPE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow TYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi STRUCTORIMPLORFUNC REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi STRUCTDECL REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id OPTSTRUCTDECL2 opencubr REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr VISIBILITY MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public FUNCDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public FUNCHEAD semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar FPARAMS closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon TYPE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow TYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi STRUCTORIMPLORFUNC REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi STRUCTDECL REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id OPTSTRUCTDECL2 opencubr REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id REPTOPTSTRUCTDECL22 opencubr REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id REPTOPTSTRUCTDECL22 opencubr REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr VISIBILITY MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private VARDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float REPTVARDECL4 semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi VISIBILITY MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private VARDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float REPTVARDECL4 semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi VISIBILITY MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public FUNCDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public FUNCHEAD semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar FPARAMS closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon TYPE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float FPARAMSTAIL REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon TYPE REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow TYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi VISIBILITY MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public MEMBERDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public FUNCDECL REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public FUNCHEAD semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar FPARAMS closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon TYPE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float REPTFPARAMS4 closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow RETURNTYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow TYPE semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi STRUCTORIMPLORFUNC REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi FUNCDEF REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi FUNCHEAD FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar FPARAMS closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr STRUCTORIMPLORFUNC REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr STRUCTDECL REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id OPTSTRUCTDECL2 opencubr REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr REPTSTRUCTDECL4 closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi STRUCTORIMPLORFUNC REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi FUNCDEF REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi FUNCHEAD FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar FPARAMS closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon TYPE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer FPARAMSTAIL REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon TYPE REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow TYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar EXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar ARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar TERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id ADDOP TERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus TERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr STRUCTORIMPLORFUNC REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr FUNCDEF REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr FUNCHEAD FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar FPARAMS closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon TYPE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer ARRAYSIZE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr ARRAYSIZE1 REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr ARRAYSIZE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr ARRAYSIZE1 REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr FPARAMSTAIL REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon TYPE REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr VARDECL REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon TYPE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer ARRAYSIZE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr ARRAYSIZE1 REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr ARRAYSIZE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr ARRAYSIZE1 REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr STRUCTORIMPLORFUNC REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr FUNCDEF REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr FUNCHEAD FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar FPARAMS closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon TYPE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer ARRAYSIZE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr ARRAYSIZE1 REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr ARRAYSIZE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr ARRAYSIZE1 REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr FPARAMSTAIL REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon TYPE REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer ARRAYSIZE REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr ARRAYSIZE1 REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr ARRAYSIZE REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr ARRAYSIZE1 REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id S1 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar APARAMS closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id S1 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar APARAMS closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar EXPR REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar ARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar TERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id APARAMSTAIL REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma EXPR REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma ARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma TERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id S1 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar APARAMS closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar EXPR REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar ARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar TERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id ADDOP TERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus TERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id EXPR1 REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id REPTAPARAMS1 closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar S3 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr STRUCTORIMPLORFUNC REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr FUNCDEF REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr FUNCHEAD FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar FPARAMS closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr VARDECL REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon TYPE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi VARDECL REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon TYPE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi VARDECL REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon TYPE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer ARRAYSIZE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr ARRAYSIZE1 REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi VARDECL REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon TYPE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer ARRAYSIZE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr ARRAYSIZE1 REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr ARRAYSIZE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr ARRAYSIZE1 REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi VARDECL REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon TYPE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer ARRAYSIZE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr ARRAYSIZE1 REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr ARRAYSIZE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr ARRAYSIZE1 REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr STRUCTORIMPLORFUNC REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr FUNCDEF REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr FUNCHEAD FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar FPARAMS closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon TYPE REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer REPTFPARAMS3 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer FPARAMSTAIL REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon TYPE REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer REPTFPARAMSTAIL4 REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer REPTFPARAMS4 closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar RELEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar ARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar TERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt TERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr STATEMENT REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id S1 REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id REPTIDNEST1 S2 REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id S2 REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id ASSIGNOP EXPR semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign EXPR semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign ARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign TERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar RELEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar ARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar TERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt TERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr REPTSTATBLOCK1 closecubr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar RELEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar ARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar TERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id RIGHTRECARITHEXPR RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id RELOP ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt ARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt TERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id RIGHTRECTERM RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id RIGHTRECARITHEXPR closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr REPTSTATBLOCK1 closecubr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr STATEMENT REPTSTATBLOCK1 closecubr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar VARIABLE closepar semi REPTSTATBLOCK1 closecubr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id VARIABLEIDNEST closepar semi REPTSTATBLOCK1 closecubr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id REPTIDNEST1 VARIABLEIDNESTTAIL closepar semi REPTSTATBLOCK1 closecubr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id VARIABLEIDNESTTAIL closepar semi REPTSTATBLOCK1 closecubr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi REPTSTATBLOCK1 closecubr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr STRUCTORIMPLORFUNC REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr FUNCDEF REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr FUNCHEAD FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar FPARAMS closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow RETURNTYPE FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void FUNCBODY REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr VARDECL REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon TYPE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi VARDECL REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon TYPE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi VARDECL REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon TYPE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi VARDECL REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon TYPE REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id REPTVARDECL4 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id S1 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id REPTIDNEST1 S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id ASSIGNOP EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign ARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign TERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id S1 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id REPTIDNEST1 S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id ASSIGNOP EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign ARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign TERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id S1 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id REPTIDNEST1 S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id ASSIGNOP EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign ARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign TERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id MULTOP FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar RELEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar ARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar TERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id ADDOP TERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus TERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id MULTOP FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id RIGHTRECTERM RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id RIGHTRECARITHEXPR RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id RELOP ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt ARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt TERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id RIGHTRECTERM RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id RIGHTRECARITHEXPR closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then STATBLOCK else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr STATEMENT REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id S1 REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id REPTIDNEST1 S2 REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id S2 REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id ASSIGNOP EXPR semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign EXPR semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign ARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign TERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id RIGHTRECARITHEXPR EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id EXPR1 semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi REPTSTATBLOCK1 closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else STATBLOCK semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id S1 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id REPTIDNEST1 S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id ASSIGNOP EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign ARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign TERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar ARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id ADDOP TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar MULTOP FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id S1 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id REPTIDNEST1 S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id ASSIGNOP EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign ARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign TERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar ARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id ADDOP TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar ARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id ADDOP TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar MULTOP FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id S1 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id REPTIDNEST1 S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id S2 REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id ASSIGNOP EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign EXPR semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign ARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign TERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign SIGN FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum MULTOP FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id RIGHTRECARITHEXPR EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id EXPR1 semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar EXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar ARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar TERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar ARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id ADDOP TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi VARDECLORSTAT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi STATEMENT REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar EXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar ARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar TERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar ARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar APARAMS closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar EXPR REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar ARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar TERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id APARAMSTAIL REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma EXPR REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma ARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma TERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar ADDOP TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus TERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id MULTOP FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id RIGHTRECTERM RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id RIGHTRECARITHEXPR closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar RIGHTRECARITHEXPR EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar EXPR1 closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar RELOP ARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt ARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt TERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt FACTOR RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar APARAMS closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar EXPR REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar ARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar TERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id APARAMSTAIL REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma EXPR REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma ARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma TERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma FUNCORVAR RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id FUNCORVARIDNEST RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id REPTIDNEST1 FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id RIGHTRECTERM RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id RIGHTRECARITHEXPR EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id EXPR1 REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id REPTAPARAMS1 closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id closepar FUNCORVARIDNESTTAIL RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id closepar RIGHTRECTERM RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id closepar RIGHTRECARITHEXPR closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id closepar closepar semi REPTFUNCBODY1 closecubr REPTPROG0
START => struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id opencubr public func id openpar id colon float closepar arrow float semi closecubr semi struct id inherits id comma id opencubr private let id colon float semi private let id colon float semi public func id openpar id colon float comma id colon float closepar arrow integer semi public func id openpar id colon float closepar arrow float semi closecubr semi func id openpar closepar arrow void opencubr closecubr struct id opencubr closecubr semi func id openpar id colon integer comma id colon integer closepar arrow integer opencubr return openpar id plus id closepar semi closecubr func id openpar id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr comma id colon id closepar arrow void opencubr let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer opensqbr closesqbr opensqbr closesqbr comma id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr closepar arrow void opencubr id openpar closepar semi id openpar id comma id closepar semi id openpar id plus id closepar semi closecubr func id openpar closepar arrow void opencubr let id colon float semi let id colon id semi let id colon integer opensqbr closesqbr semi let id colon integer opensqbr closesqbr opensqbr closesqbr semi let id colon integer opensqbr intnum closesqbr opensqbr intnum closesqbr semi closecubr func id openpar id colon integer comma id colon integer closepar arrow void opencubr if openpar id gt id closepar then opencubr id assign id semi closecubr else semi while openpar id gt id closepar opencubr closecubr semi while openpar id gt id closepar opencubr read openpar id closepar semi closecubr semi closecubr func id openpar closepar arrow void opencubr let id colon integer semi let id colon integer semi let id colon integer semi let id colon id semi id assign intnum semi id assign intnum semi id assign id mult id semi if openpar id plus id mult id gt id closepar then opencubr id assign id semi closecubr else semi id assign openpar id plus id closepar mult id semi id assign openpar id plus openpar id plus id closepar closepar mult id semi id assign minus intnum mult id semi write openpar not openpar id plus id closepar closepar semi write openpar openpar id openpar id comma id closepar plus id mult id closepar gt id openpar id comma id closepar closepar semi REPTFUNCBODY1 closecubr 
