[blockcmt, /*\nThis is the example program used in slides CodeGenerationII page 36\n*/, 1]
[func, func, 5]
[id, f, 5]
[openpar, (, 5]
[id, p1, 5]
[colon, :, 5]
[integer, integer, 5]
[comma, ,, 5]
[id, p2, 5]
[colon, :, 5]
[integer, integer, 5]
[comma, ,, 5]
[id, p3, 5]
[colon, :, 5]
[integer, integer, 5]
[closepar, ), 5]
[arrow, ->, 5]
[integer, integer, 5]
[inlinecmt, // 2.1, 2.2\n, 5]
[opencubr, {, 6]
[let, let, 7]
[id, retval, 7]
[colon, :, 7]
[integer, integer, 7]
[semi, ;, 7]
[id, retval, 8]
[assign, =, 8]
[id, p1, 8]
[plus, +, 8]
[id, p2, 8]
[mult, *, 8]
[id, p3, 8]
[semi, ;, 8]
[write, write, 9]
[openpar, (, 9]
[id, retval, 9]
[closepar, ), 9]
[semi, ;, 9]
[return, return, 10]
[openpar, (, 10]
[id, retval, 10]
[closepar, ), 10]
[semi, ;, 10]
[closecubr, }, 11]
[func, func, 13]
[id, main, 13]
[openpar, (, 13]
[closepar, ), 13]
[arrow, ->, 13]
[void, void, 13]
[opencubr, {, 14]
[let, let, 15]
[id, a, 15]
[colon, :, 15]
[integer, integer, 15]
[semi, ;, 15]
[inlinecmt, // 1.1\n, 15]
[let, let, 16]
[id, b, 16]
[colon, :, 16]
[integer, integer, 16]
[semi, ;, 16]
[inlinecmt, // 1.1\n, 16]
[let, let, 17]
[id, c, 17]
[colon, :, 17]
[integer, integer, 17]
[semi, ;, 17]
[inlinecmt, // 1.1\n, 17]
[id, a, 18]
[assign, =, 18]
[intnum, 1, 18]
[semi, ;, 18]
[inlinecmt, // 3.1, 5.1\n, 18]
[id, b, 19]
[assign, =, 19]
[intnum, 2, 19]
[semi, ;, 19]
[id, c, 20]
[assign, =, 20]
[intnum, 3, 20]
[semi, ;, 20]
[id, a, 21]
[assign, =, 21]
[id, f, 21]
[openpar, (, 21]
[id, a, 21]
[comma, ,, 21]
[id, b, 21]
[comma, ,, 21]
[id, c, 21]
[closepar, ), 21]
[mult, *, 21]
[id, b, 21]
[plus, +, 21]
[id, c, 21]
[semi, ;, 21]
[write, write, 22]
[openpar, (, 22]
[id, a, 22]
[closepar, ), 22]
[semi, ;, 22]
[closecubr, }, 23]
[$, $, 24]
